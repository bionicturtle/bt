<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | David&#39;s (bionicturtle) data blog</title>
    <link>/category/r/</link>
      <atom:link href="/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 05 Apr 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu77a30fa54a1153d827111821c0262bf2_25270_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/category/r/</link>
    </image>
    
    <item>
      <title>BT Question Set P1-T2-21-1: Non-stationary time series</title>
      <link>/post/2021/bt-question-set-p1-t2-21-1-non-stationary-time-series/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/post/2021/bt-question-set-p1-t2-21-1-non-stationary-time-series/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;this-is-a-seasonal-model-without-a-trend&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;21.1.1 This is a seasonal model without a trend&lt;/h3&gt;
&lt;p&gt;21.1.1 The following seasonal dummy model estimates the quarterly growth rate (in percentage terms) of housing starts … The model’s intercept (δ) equals +1.20 and the gamma coefficients are the following: γ(1) = -2.60, γ(2) = +7.90, and γ(3) = +1.80. According to this model, when does the growth rate peak?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# similar to GARP&amp;#39;s EOC 11.8, there is no trend, only seasonality

c_delta &amp;lt;- 1.20; gamma &amp;lt;- c(-2.6, 7.9, 1.80, 0) 
quarters &amp;lt;- rep(1:4, 5)  
y = c_delta + gamma[quarters]
ts.plot(y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-04-05-bt-question-set-p1-t2-21-1-non-stationary-time-series.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;an-ar2-that-is-stationary-as-demonstrated-by-roots-1.0-but-also-our-ability-to-simulate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;21.1.2 An AR(2) that is stationary as demonstrated by |roots} &amp;gt; 1.0 but also our ability to simulate&lt;/h3&gt;
&lt;p&gt;21.1.2. Peter wants to model the following AR(2) time series: Y(t) = 0.750&lt;em&gt;Y(t-1) - 0.1250&lt;/em&gt;T(t-2) + e(t). He wonders if this AR(2) is stationary. He realizes that he can write this as a log polynomial …&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;polynom&amp;quot;, repos = &amp;quot;http://cran.us.r-project.org&amp;quot;)
library(polynom)

peters_poly &amp;lt;- polynomial(coef = c(1, -0.75, 0.125)) 
peters_poly&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1 - 0.75*x + 0.125*x^2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;solve(peters_poly) # the roots (aka, zeros) are 2 and 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar_2 &amp;lt;-  arima.sim(model=list(order=c(2,0,0),ar = c(-0.75, 0.125)),n = 100)
ts.plot(ar_2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-04-05-bt-question-set-p1-t2-21-1-non-stationary-time-series.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;compares-a-deterministic-trend-to-a-stochastic-random-walk-with-drift-trend&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;21.1.3 Compares a deterministic trend to a stochastic (random walk with drift) trend&lt;/h3&gt;
&lt;p&gt;21.1.3. Sally considers two series for her model: a linear trend model (aka, deterministic trend), and a random walk with drift. Each is simulated below (n = 100 steps)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)
library(RColorBrewer)

set.seed(28)

n &amp;lt;- 100
x &amp;lt;- 1:n

# white noise
white_noise &amp;lt;- arima.sim(model = list(order = c(0,0,0)), n = 100)

#linear trend
linear_tr &amp;lt;- -1.8 + 0.15*x
time_trend &amp;lt;- linear_tr + white_noise

rw_drift &amp;lt;- arima.sim(model = list(order = c(0,1,0)), n = n-1, mean = 0.4)

trends &amp;lt;- data.frame(
  x,
  time_trend,
  rw_drift
)

p1 &amp;lt;- trends %&amp;gt;% ggplot(aes(x=x)) +
  geom_line(aes(y=rw_drift), color = &amp;quot;blue&amp;quot;, size = 2) +
  geom_line(aes(y=time_trend), color = &amp;quot;orange&amp;quot;, size = 2) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),
    axis.text = element_text(size = 14)
  )
    
p1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Don&amp;#39;t know how to automatically pick scale for object of type ts. Defaulting to continuous.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-04-05-bt-question-set-p1-t2-21-1-non-stationary-time-series.en_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-25: Long-horizon forecasts</title>
      <link>/post/2020/bt-question-set-p1-t2-20-25-long-horizon-forecasts/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-25-long-horizon-forecasts/</guid>
      <description>


&lt;p&gt;T2-20-25&lt;/p&gt;
&lt;p&gt;20.25.1. Over the prior ten months of the calendar year, below is plotted the monthly growth rate of a new cryptocurrency. Two months ago, the growth rate was + 0.782%. Last month, the growth rate was +2.072%. We will omit the percentage symbol (%) and assume the growth rates are percentages; i.e., Y(9) = Y(t-2) = +0.782 and Y(10) = Y(t-1) = +2.072.&lt;/p&gt;
&lt;p&gt;*** plot goes here ***&lt;/p&gt;
&lt;p&gt;Your colleagues have determined that the best model for this series is an AR(2) model which is given by Y(t) = ẟ + ϕ(1)&lt;em&gt;Y(t-1) + ϕ(2)&lt;/em&gt;Y(t-2) + ε(t). In this instance of the model, the intercept is 0.40, the first AR parameter is 0.50 and the second AR parameter is 0.30; specifically, the model is given by Y(t) = 0.40 + 0.50&lt;em&gt;Y(t-1) + 0.30&lt;/em&gt;Y(t-2) + ε(t). Please note that the intercept of 0.40 here represents 0.40% such that, in decimal terms, the model is given by Y(t) = 0.0040 + 0.50&lt;em&gt;Y(t-1) + 0.30&lt;/em&gt;Y(t-2) + ε(t) where Y(t-2) = 0.007820 and Y(t-1) = 0.020720 but the AR parameters remain 0.50 and 0.30.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(13)

AR_param_1 = 0.5
AR_param_2 = 0.3
AR_intercept = 0.4
AR_n &amp;lt;- 10
AR_LR &amp;lt;- AR_intercept/(1- AR_param_1 - AR_param_2)

theme_set(theme_bw())

# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR &amp;lt;- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR &amp;lt;- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)

AR &amp;lt;- round(AR, digits = 3)
AR_tb &amp;lt;- AR %&amp;gt;% as_tibble() %&amp;gt;% rowid_to_column()

# reduced to 80% on copy/paste
AR_tb %&amp;gt;% 
  ggplot(aes(rowid, x)) + 
  ylab(&amp;quot;Growth (%)&amp;quot;) +
  theme(
    text = element_text(family = &amp;quot;Calibri&amp;quot;), 
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 13, face = &amp;quot;bold&amp;quot;, margin = margin(0,10,0,0)),
    axis.text = element_text(size = 13, face = &amp;quot;bold&amp;quot;)
  ) +
  geom_line(size = 1) +
  geom_point(size = 4) + 
  scale_x_continuous(breaks = seq(1, 10, 1), minor_breaks = NULL) +
  scale_y_continuous(labels = scales::number_format(accuracy = 0.01)) +
  geom_text(aes(label = x), size = 4, color = &amp;quot;darkgreen&amp;quot;, fontface = &amp;quot;bold&amp;quot;, nudge_y = 0.2, nudge_x = .62)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Don&amp;#39;t know how to automatically pick scale for object of type ts. Defaulting to continuous.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not
## found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-27-bt-question-set-p1-t2-20-25-long-horizon-forecasts.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR[9] # the ts not the tibble&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.782&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR[10]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.072&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_11 &amp;lt;- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 &amp;lt;- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]

AR_tb &amp;lt;- cbind(AR_tb, cat = rep(&amp;quot;Past&amp;quot;,10))
AR_tb &amp;lt;- AR_tb %&amp;gt;% add_row(rowid = 11, x = AR_11, cat = &amp;quot;projected&amp;quot;)
AR_tb &amp;lt;- AR_tb %&amp;gt;% add_row(rowid = 12, x = AR_12, cat = &amp;quot;projected&amp;quot;)

AR_tb %&amp;gt;% 
  ggplot(aes(rowid, x, group = cat, color = cat)) +
  geom_line() +
  geom_point(size = 4) +
  # xlim(0, 13)
  # scale_x_discrete(limits = c(0,13), breaks = 1)
  scale_x_continuous(breaks = seq(1, 12, 1), minor_breaks = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-27-bt-question-set-p1-t2-20-25-long-horizon-forecasts.en_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_11&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.6706&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR_12&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.8569&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;20.25.3. Long-run mean&lt;/p&gt;
&lt;p&gt;20.25.2.Jennifer is an analyst who is deciding which second-order model to fit to her time series dataset. She prefer to fit either an MA(2) or AR(2) model:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MA(2): Y(t) = μ + θ(1)&lt;em&gt;ε(t-1) + θ(2)&lt;/em&gt;ε(t-2) + ε(t)&lt;/li&gt;
&lt;li&gt;AR(2): Y(t) = ẟ + ϕ(1)&lt;em&gt;Y(t-1) + ϕ(2)&lt;/em&gt;Y(t-2) + ε(t)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;She is evaluating the models with the same parameters: an intercept of 0.590 and weights of 0.460 and 0.180 such that the two models are specified as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MA(2): Y(t) = 0.590 + 0.460&lt;em&gt;ε(t-1) + 0.180&lt;/em&gt;ε(t-2) + ε(t)&lt;/li&gt;
&lt;li&gt;AR(2): Y(t) = 0.590 + 0.460&lt;em&gt;Y(t-1) + 0.180&lt;/em&gt;Y(t-2) + ε(t)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What are, respectively, the long-run (aka, unconditional) means of these two models?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(22)

AR2_param_1 = 0.460
AR2_param_2 = 0.180
AR2_intercept = 0.590
AR2_n &amp;lt;- 10

theme_set(theme_bw())

# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR &amp;lt;- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR2 &amp;lt;- arima.sim(model=list(order=c(2,0,0), ar = c(AR2_param_1, AR2_param_2)), n = AR2_n, mean = AR2_intercept)

AR2 &amp;lt;- round(AR2, digits = 3)
AR2_tb &amp;lt;- AR2 %&amp;gt;% as_tibble() %&amp;gt;% rowid_to_column()

AR2_tb %&amp;gt;% 
  ggplot(aes(rowid, x)) + 
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Don&amp;#39;t know how to automatically pick scale for object of type ts. Defaulting to continuous.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-27-bt-question-set-p1-t2-20-25-long-horizon-forecasts.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR2_11 &amp;lt;- AR2_intercept + AR2_param_1 * AR2[10] + AR2_param_2 * AR2[9]
AR2_12 &amp;lt;- AR2_intercept + AR2_param_1 * AR2_11 + AR2_param_2 * AR2[10]
AR2_13 &amp;lt;- AR2_intercept + AR2_param_1 * AR2_12 + AR2_param_2 * AR2_11
AR2_14 &amp;lt;- AR2_intercept + AR2_param_1 * AR2_13 + AR2_param_2 * AR2_12

x = vector(mode= &amp;quot;numeric&amp;quot;, length = 30)
x[1] = AR2_13
x[2] = AR2_14
for (i in 3:30) {
  x[i] &amp;lt;- AR2_intercept + AR2_param_1 * x[i-1] + AR2_param_2 * x[i-2]
}

plot(x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-27-bt-question-set-p1-t2-20-25-long-horizon-forecasts.en_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR2_11&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.95892&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR2_12&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.037763&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR2_13&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.239977&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AR2_14&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.347187&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.432902&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.491628&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[5]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.534071&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[28]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.638846&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[29]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.638858&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x[30]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.638867&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-22-2: AR versus MA process</title>
      <link>/post/2020/bt-question-set-p1-t2-20-22-2-ar-versus-ma-process/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-22-2-ar-versus-ma-process/</guid>
      <description>


&lt;div id=&#34;p1.t2.20.22.-stationary-time-series-autoregressive-ar-and-moving-average-ma-processes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;P1.T2.20.22. Stationary Time Series: autoregressive (AR) and moving average (MA) processes&lt;/h2&gt;
&lt;div id=&#34;learning-objectives&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Learning objectives&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Define and describe the properties of autoregressive (AR) processes.&lt;/li&gt;
&lt;li&gt;Define and describe the properties of moving average (MA) processes.&lt;/li&gt;
&lt;li&gt;Explain how a lag operator works.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(25)

MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean, μ = 2.0 and weight parameter 𝜃= 0.5
MA &amp;lt;- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)

AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6 
AR &amp;lt;- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)

color_AR = &amp;quot;#266935&amp;quot;
color_MA = &amp;quot;darkblue&amp;quot;

time_ma_ar &amp;lt;- bind_cols(MA, AR) %&amp;gt;% rowid_to_column() %&amp;gt;% 
  rename(y_MA = ...1, y_AR = ...2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...1
## * NA -&amp;gt; ...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;time_ma_ar %&amp;gt;% ggplot(aes(x = rowid)) + 
  theme_bw() + 
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    legend.position = c(0.8, 0.86)
  ) + 
  ggtitle(&amp;quot;AR(1) series in GREEN. MA(1) series in BLUE.&amp;quot;) + 
  geom_line(aes(y = y_AR), color = color_AR, size = 1) +
  geom_line(aes(y = y_MA), color = color_MA, size = 1) +
  scale_y_continuous(breaks = c(0, 2.5, 5.0, 7.5, 10, 12.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-08-bt-question-set-p1-t2-20-22-2-ar-versus-ma-process.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  # scale_color_manual(name = &amp;quot;Simulations with arima.sim()&amp;quot;, labels=c(&amp;quot;MA(1)&amp;quot;, &amp;quot;AR(1)&amp;quot;))

# MA mean is intercept
lr_mean_AR &amp;lt;- AR_intercept/(1 - AR_param)
variance_MA &amp;lt;- (1 + MA_weight^2)*1
variance_AR &amp;lt;- 1/(1 - AR_param^2)

lr_mean_AR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;variance_MA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.25&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;variance_AR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.5625&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-21-3: White Noise (WN) Process</title>
      <link>/post/2020/bt-question-set-p1-t2-20-21-3-white-noise-wn-process/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-21-3-white-noise-wn-process/</guid>
      <description>


&lt;div id=&#34;p1-t2-20-21-3-white-noise-wn-process&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;P1-T2-20-21-3: White Noise (WN) Process)&lt;/h2&gt;
&lt;p&gt;20.21.3. Barbara was delighted to learn that she can easily simulate white noise in R with a single command. She learned that she can use arima.sim(model = list(order = c(0,0,0)), n = 100) to generate white noise with an ARIMA(0,0,0) model over a length of 100 days. She wants the shocks to have a Poisson distribution so she uses the command arima.sim(model = list(order = c(0,0,0)), n = 100, rand.gen = function(n, …) rpois(n, lambda = 10)) which assumes a Poisson distribution. Below is a plot of the white noise (top panel) and its associated autocorrelation function (ACF, bottom panel).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Simulate a WN model with list(order = c(0, 0, 0))
# white_noise &amp;lt;- arima.sim(model = list(order = c(0,0,0)), n = 100)
# white_noise_1_tb  &amp;lt;- as_tibble(white_noise) %&amp;gt;% rowid_to_column()
# p1 &amp;lt;- ggplot(white_noise_1_tb, aes(x = rowid, y = x)) + geom_line()
# p2 &amp;lt;- ggAcf(white_noise)
# grid.arrange(p1, p2)

library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forecast)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;quantmod&amp;#39;:
##   method            from
##   as.zoo.data.frame zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
library(extrafont)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registering fonts with R&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)
# library(ggfortify)
# library(cowplot)

set.seed(58)

# Simulate a WN model with list(order = c(0, 0, 0))
# dat_wn &amp;lt;- arima.sim(model = list(order = c(0,0,0)), n = 100)
dat_wn &amp;lt;- arima.sim(model = list(order = c(0,0,0)), n = 100, 
                         rand.gen = function(n, ...) rpois(n, lambda = 10))
dat_wn_tbl &amp;lt;- bind_cols(dat_wn) %&amp;gt;% rowid_to_column() %&amp;gt;% rename(value_y = ...1 )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;process_color = &amp;quot;#266935&amp;quot;
p1 &amp;lt;- dat_wn_tbl %&amp;gt;% ggplot(aes(x = rowid, y = value_y)) +
  geom_line(size= 1, color = process_color) +
  ylab(&amp;quot;Y Value&amp;quot;) +
  xlab(&amp;quot;Process (100 days)&amp;quot;) + 
  theme_bw() + 
  theme(
    text = element_text(family = &amp;quot;Calibri&amp;quot;),
    plot.title = element_blank(),
    axis.title.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.title.y = element_text(size = 14, face = &amp;quot;bold&amp;quot;, color = process_color),
    axis.text.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text.y = element_text(size = 14, face= &amp;quot;bold&amp;quot;),
    panel.background = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_line(color=&amp;quot;grey&amp;quot;),
    panel.border = element_blank()
  )

#p2 &amp;lt;- ggAcf(dat_wn)

p2 &amp;lt;- ggAcf(dat_wn) + 
  xlab(&amp;quot;Lags&amp;quot;) + 
  theme_bw() +
  geom_segment(size = 3) +
  theme(
    text = element_text(family = &amp;quot;Calibri&amp;quot;),
    plot.title = element_blank(),
    axis.title.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.title.y = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text.y = element_text(size = 14, face= &amp;quot;bold&amp;quot;),
    panel.background = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_line(color=&amp;quot;grey&amp;quot;),
    panel.border = element_blank()
  )


# grid.arrange(p1, p2)

p1/p2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Don&amp;#39;t know how to automatically pick scale for object of type ts. Defaulting to continuous.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-30-bt-question-set-p1-t2-20-21-3-white-noise-wn-process.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;s5 &amp;lt;- arima.sim(model = list(order = c(0,0,0)), n = 100, 
                         rand.gen = function(n, ...) rpois(n, lambda = 10))

dat_rw &amp;lt;- arima.sim(model = list(order = c(0,1,0)), n = 100)
dat_rw_tbl &amp;lt;- bind_cols(dat_rw) %&amp;gt;% rowid_to_column() %&amp;gt;% rename(value_y = ...1 )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_rw_tbl %&amp;gt;% ggplot(aes(x = rowid, y = value_y)) + geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Don&amp;#39;t know how to automatically pick scale for object of type ts. Defaulting to continuous.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-30-bt-question-set-p1-t2-20-21-3-white-noise-wn-process.en_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-21-2: Autocorrelation function (ACF)</title>
      <link>/post/2020/bt-question-set-p1-t2-20-21-2-autocorrelation-function-acf/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-21-2-autocorrelation-function-acf/</guid>
      <description>


&lt;p&gt;20.21.2. Shown below is the autocorrelation function (ACF) for a time series object that contains the total quarterly beer production in Australia (in megalitres) from 1956:Q1 to 2010:Q2 (source: &lt;a href=&#34;https://cran.r-project.org/web/packages/fpp2/index.html&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/web/packages/fpp2/index.html&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forecast)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;quantmod&amp;#39;:
##   method            from
##   as.zoo.data.frame zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;fpp2&amp;quot;)
library(fpp2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------------------------------- fpp2 2.4 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2   3.3.2     v expsmooth 2.3  
## v fma       2.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beer2 &amp;lt;- ausbeer
beer2 &amp;lt;- window(ausbeer, start=1992)

acf_beer2 &amp;lt;- ggAcf(beer2) + 
  xlab(&amp;quot;Lags&amp;quot;) + 
  theme_bw() +
  geom_segment(size = 3) +
  theme(
    text = element_text(family = &amp;quot;Calibri&amp;quot;),
    plot.title = element_blank(),
    axis.title.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.title.y = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text.x = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text.y = element_text(size = 14, face= &amp;quot;bold&amp;quot;),
    panel.grid.major.x = element_blank(),
    panel.grid.major.y = element_line(color=&amp;quot;grey&amp;quot;),
    panel.border = element_blank()
  )

acf_beer2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not
## found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-30-bt-question-set-p1-t2-20-21-2-autocorrelation-function-acf.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-20-2: m-fold cross-validation</title>
      <link>/post/2020/bt-question-set-p1-t2-20-20-2-m-fold-cross-validation/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-20-2-m-fold-cross-validation/</guid>
      <description>


&lt;div id=&#34;m-fold-cross-validation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;m-fold cross-validation&lt;/h3&gt;
&lt;p&gt;Our question P1-T2-20-2 (located at &lt;a href=&#34;https://www.bionicturtle.com/forum/threads/p1-t2-20-20-regression-diagnostics-outliers-cooks-distance-m-fold-cross-validation-and-residual-diagnostics.23497/&#34; class=&#34;uri&#34;&gt;https://www.bionicturtle.com/forum/threads/p1-t2-20-20-regression-diagnostics-outliers-cooks-distance-m-fold-cross-validation-and-residual-diagnostics.23497/&lt;/a&gt;) mimics GARP’s approach in their Chapter 9; in particular their solution 9.14. However, it makes the mistake of using cross-validation to select the regression coefficients. The problem with this approach is simple: the entire dataset is not used to fit the model.&lt;/p&gt;
&lt;p&gt;Here are two helpful resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Data Science (Data Analysis and Prediction Algorithms with R) by Rafael A. Irizarry at &lt;a href=&#34;https://rafalab.github.io/dsbook/cross-validation.html#k-fold-cross-validation&#34; class=&#34;uri&#34;&gt;https://rafalab.github.io/dsbook/cross-validation.html#k-fold-cross-validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The answer at &lt;a href=&#34;https://stats.stackexchange.com/questions/52274/how-to-choose-a-predictive-model-after-k-fold-cross-validation&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/questions/52274/how-to-choose-a-predictive-model-after-k-fold-cross-validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the stackexhange Bogdanovist explains that “the purpose of cross-validation is not to come up with our final model. We don’t use these 5 instances of our trained model to do any real prediction. For that we want to use all the data we have to come up with the best model possible. The purpose of cross-validation is model checking, not model building.”&lt;/p&gt;
&lt;p&gt;In this way training different linear regression coefficients is NOT training multiple models. In the example below, there are not three models, there is one model. The one model is the dead-simple univariate regression: lm(Y ~ X, data). The purpose of cross-validation is to estimate the error, it is NOT to calibrate the coefficients by using two-thirds (i.e., 6 of 9) of the dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

obs &amp;lt;- tibble(
    X = c(1.00, 2.00, 3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00), 
    Y = c(2.20, 3.50, 5.20, 2.80, 6.90, 8.80, 5.70, 11.30, 8.60)
)

testrows_M1 &amp;lt;- 1:6; testrows_M2 &amp;lt;- 4:9; testrows_M3 &amp;lt;- c(1:3, 7:9)
train_M1 &amp;lt;- obs[testrows_M1, ]; test_M1 &amp;lt;- obs[-testrows_M1, ]
train_M2 &amp;lt;- obs[testrows_M2, ]; test_M2 &amp;lt;- obs[-testrows_M2, ]
train_M3 &amp;lt;- obs[testrows_M3, ]; test_M3 &amp;lt;- obs[-testrows_M3, ]

model_M1 &amp;lt;- lm(Y ~ X, train_M1)
model_M2 &amp;lt;- lm(Y ~ X, train_M2)
model_M3 &amp;lt;- lm(Y ~ X, train_M3)

predict_M1 &amp;lt;- predict(model_M1, test_M1, type = &amp;quot;response&amp;quot;)
predict_M2 &amp;lt;- predict(model_M2, test_M2, type = &amp;quot;response&amp;quot;)
predict_M3 &amp;lt;- predict(model_M3, test_M3, type = &amp;quot;response&amp;quot;)

error_M1 &amp;lt;- test_M1$Y - predict_M1
error_M2 &amp;lt;- test_M2$Y - predict_M2
error_M3 &amp;lt;- test_M3$Y - predict_M3

CV_RSS_M1 &amp;lt;- sum(error_M1^2) # GARP&amp;#39;s selection metric
CV_RSS_M2 &amp;lt;- sum(error_M2^2)
CV_RSS_M3 &amp;lt;- sum(error_M3^2)

df &amp;lt;- nrow(obs) - 2 # df = n - k, where k is no. of coefficients
# sample too small, not using

RMSE_M1 &amp;lt;- sqrt(mean(error_M1^2))
RMSE_M2 &amp;lt;- sqrt(mean(error_M2^2))
RMSE_M3 &amp;lt;- sqrt(mean(error_M3^2))

RMSE_M1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.545756&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RMSE_M2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.350539&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RMSE_M3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.82291&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(caret)

model_cv &amp;lt;- train(
  Y ~ X, 
  obs,
  method = &amp;quot;lm&amp;quot;,
  trControl = trainControl(
    method = &amp;quot;cv&amp;quot;, 
    number = 3,
    verboseIter = TRUE
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## + Fold1: intercept=TRUE 
## - Fold1: intercept=TRUE 
## + Fold2: intercept=TRUE 
## - Fold2: intercept=TRUE 
## + Fold3: intercept=TRUE 
## - Fold3: intercept=TRUE 
## Aggregating results
## Fitting final model on full training set&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Notice how caret builds the final regression model on the full dataset. 
# CV is to estimate the out-of-sample error; the folded models are &amp;quot;disposed&amp;quot;
# We are not REALLY comparing three different models; there is only one model here
# CV is to check the model not build the model
# And intuitively: we want to use all the data to fit the model.

model_cv$finalModel&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = .outcome ~ ., data = dat)
## 
## Coefficients:
## (Intercept)            X  
##      1.4444       0.9333&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_full &amp;lt;- lm(Y~ X, obs)
model_full&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Y ~ X, data = obs)
## 
## Coefficients:
## (Intercept)            X  
##      1.4444       0.9333&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question P1-T2-20-20-3: Regression diagnostic plots</title>
      <link>/post/2020/bt-question-p1-t2-20-20-3-regression-diagnostic-plots/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-p1-t2-20-20-3-regression-diagnostic-plots/</guid>
      <description>


&lt;div id=&#34;bt-question-20.20.3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;BT Question 20.20.3&lt;/h2&gt;
&lt;p&gt;20.20.3. Patrick generated a simple regression line for a sample of 50 pairwise observations. After generating the regression model, he ran R’s built-in plot(model) function which produces a standard set of regression diagnostics. These four plots are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(broom)
library(gt)
library(ggrepel)

intercept &amp;lt;- 4
intercept_sig &amp;lt;- 1

x1_mu &amp;lt;- 5
x1_sig &amp;lt;- 1
x1_beta &amp;lt;- 0.3

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 5 # low value gets low p-value b/c low noise

size &amp;lt;- 50
set.seed(25)

rho_noise_x1 &amp;lt;- 0.7

x1_start = 0
x1_end = 5
x1_step = (x1_end - x1_start)/size

results &amp;lt;- tibble(
  x0_sn = rnorm(size),
  x1_sn = rnorm(size),
  x2_sn = rnorm(size), # needed to retain to preserve simulation results!
  e = rnorm(size),
  # 
  x0 = intercept + x0_sn * intercept_sig,
  x1 = seq(x1_start, x1_end - x1_step, by = x1_step),
  e_sigma = rpois(size,2), 
  x1_b = rep(x1_beta, size),
)

results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 + (x1_b * x1) + (e * e_sigma)
)

model_1 &amp;lt;- lm(y ~ x1, data = results1)
summary(model_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -8.2138 -1.7154 -0.6175  0.8984 11.1858 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)   3.9116     0.9257   4.225 0.000106 ***
## x1            0.4636     0.3256   1.424 0.160933    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 3.322 on 48 degrees of freedom
## Multiple R-squared:  0.04053,    Adjusted R-squared:  0.02054 
## F-statistic: 2.028 on 1 and 48 DF,  p-value: 0.1609&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# model_tidy_1 &amp;lt;- tidy(model_1)
# model_tidy_1[2,1] &amp;lt;- &amp;quot;Factor&amp;quot;

# plot(model_1)
# autoplot(model_1) # + 
# geom_text(vjust=-1, label=rownames(results1))

# mean(results1$y) # price
# mean(results1$x0) # intercept
# mean(results1$x1) # sqfeet

par(mfrow = c(2,2))
plot(model_1, id.n = 0) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-09-24-bt-question-p1-t2-20-20-3-regression-diagnostic-plots.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# id.n: number of points to be labelled in each plot, starting with the most extreme.

model_1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1, data = results1)
## 
## Coefficients:
## (Intercept)           x1  
##      3.9116       0.4636&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-do-the-plot-diagnostics-tell-us&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What do the plot() diagnostics tell us?&lt;/h2&gt;
&lt;div id=&#34;residuals-vs-fitted&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Residuals vs Fitted&lt;/h3&gt;
&lt;p&gt;This plots residuals against the fitted values. We would like to see the residuals randomly scattered across the zero (which these are). The scatter pattern is relatively even suggesting homoskedasticity; i.e., we do not see a pattern that suggests heteroskedasticity. There are not many outliers. This is pretty good-looking residuals vs fitted plot suggestive of a decent linear regression.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;normal-q-q&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Normal Q-Q&lt;/h3&gt;
&lt;p&gt;If the distribution is normal, the plot will approximate along the straight line. But notice how this plot contains an obvious heavy-tail on the right side.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scale-location&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scale-location&lt;/h3&gt;
&lt;p&gt;This plot is similiar to the Residuals vs Fitted plot, but the residuals are standardized. It is also used to evaluate heteroskedasticity. But, again, we do not perceive strong evidence of a non-constant variance.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;residuals-vs-leverage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Residuals vs Leverage&lt;/h3&gt;
&lt;p&gt;The red dashed line represents a Cook’s distance of 0.5, but there are not observations outside of this line (i.e., in the upper-left) such that we do not have a case for outlier(s).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-19: Regression diagnostics (1st set)</title>
      <link>/post/2020/bt-question-set-p1-t2-20-19-regression-diagnostics-1st-set/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-19-regression-diagnostics-1st-set/</guid>
      <description>


&lt;div id=&#34;p1.t2.20.19.-regression-diagnostics-omitted-variables-heteroskedasticity-and-multicollinearity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;P1.T2.20.19. Regression diagnostics: omitted variables, heteroskedasticity, and multicollinearity&lt;/h2&gt;
&lt;div id=&#34;question-1-fama-french-2-factor---omitted-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 1: Fama-french 2-factor &amp;lt;- omitted variable&lt;/h3&gt;
&lt;p&gt;20.19.1. Jane manages a market-neutral equity fund for her investment management firm. The fund’s market-neutral style implies (we will assume) that the fund’s beta with respect to the market’s excess return is zero. However, the fund does seek exposure to other factors. The size factor captures the excess return of small-capitalization stocks (SMB = “small minus big”). Jane tests her portfolio’s exposure to the size factor by regressing the portfolio’s excess return against the size factor returns. Her regression takes the form PORTFOLIO(i) = α + β1×SMB(i) + ε(i). The results of this single-variable (aka, simple) regression are displayed below.&lt;/p&gt;
&lt;p&gt;… univariate regression output …&lt;/p&gt;
&lt;p&gt;In this simple regression, we can observe that SMB’s coefficient is 0.6771 and significant. Jane is concerned that this simple regression might suffer from omitted variable bias. Specifically, she thinks the value factor has been omitted. The value factor captures the excess returns of value stocks (HML = “high book-to-market minus low book-to-market”)’. She confirms that the omitted variable, HML, is associated with her response variable. Further, the omitted variable, HML, is correlated to SMB. The correlation between HML and SMB is 0.30. Jane runs a multivariate regression with both explanatory variables, SMB and HML; in this regression, HML’s beta coefficient is 0.7240 such that the new term is β2×HML(i) = 0.7240×HML(i). Which of the following is nearest to the revised SMB coefficient; i.e., what is the revised β1?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(gt)

intercept &amp;lt;- .03
intercept_sig &amp;lt;- .01

# x1 is market factor
x1_mu &amp;lt;- .05
x1_sig &amp;lt;- .01
x1_beta &amp;lt;- 0.5

# x2 is size factor
x2_mu &amp;lt;- .04
x2_sig &amp;lt;- .01
x2_beta &amp;lt;- 0.7

#x3 is value factor
x3_mu &amp;lt;- .03
x3_sig &amp;lt;- .01
x3_beta &amp;lt;- -0.5

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 0 # low value gets low p-value b/c low noise

size &amp;lt;- 120
set.seed(52)

results &amp;lt;- tibble(
  x0 = rnorm(size, intercept, intercept_sig),
  x1 = rnorm(size, x1_mu, x1_sig),
  x2 = rnorm(size, x2_mu, x2_sig),
  x2_r = 0.3 * x1 + sqrt(1 - 0.3^2)* x2,
  x3 = rnorm(size, x3_mu, x3_sig),
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size),
  x3_b = rep(x3_beta, size),
  noise = rnorm(size, 0, noise_sig)
)

results1 &amp;lt;- results %&amp;gt;% mutate(
  y1 = x0 + x1_b * x1 + noise, # market factor only
  y2 = x0 + x1_b * x1 + x2_b * x2_r + noise, # market and size
  y3 = x0 + x1_b * x1 + x2_b * x2 + x3_b * x3 + noise # all three
)

model_y1 &amp;lt;- lm(y2 ~ x1, data = results1) # market only
model_y2 &amp;lt;- lm(y2 ~ x1 + x2_r, data = results1) # market and size
model_y3 &amp;lt;- lm(y3 ~ x1 + x2 + x3, data = results1)

cor_x1_x2 &amp;lt;- cor(results1$x1, results1$x2_r)
cov_x1_x2 &amp;lt;- cov(results1$x1, results1$x2_r)
var_x1 &amp;lt;- var(results1$x1)
var_x2 &amp;lt;- var(results1$x2_r)
beta_x1 &amp;lt;- cov_x1_x2/var_x1

model_omit &amp;lt;- lm(x2_r ~ x1, data = results1)

# model_y1 suffers omitted variable bias: x1 = 0.6771 as given in problem
summary(model_y1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y2 ~ x1, data = results1)
## 
## Residuals:
##       Min        1Q    Median        3Q       Max 
## -0.038216 -0.008610 -0.001528  0.008894  0.033695 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.058839   0.005298  11.105  &amp;lt; 2e-16 ***
## x1          0.677063   0.106361   6.366 3.86e-09 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.01155 on 118 degrees of freedom
## Multiple R-squared:  0.2556, Adjusted R-squared:  0.2493 
## F-statistic: 40.52 on 1 and 118 DF,  p-value: 3.864e-09&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# And note that &amp;quot;true&amp;quot; X1 = 0.463 per the solution&amp;#39;s 0.460
# Problem provides rounded 0.7240 as HML coefficient
summary(model_y2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y2 ~ x1 + x2_r, data = results1)
## 
## Residuals:
##        Min         1Q     Median         3Q        Max 
## -0.0221522 -0.0069359  0.0000787  0.0066889  0.0227758 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.030915   0.005373   5.754 7.12e-08 ***
## x1          0.463067   0.088293   5.245 7.05e-07 ***
## x2_r        0.724203   0.086597   8.363 1.48e-13 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.009173 on 117 degrees of freedom
## Multiple R-squared:  0.5341, Adjusted R-squared:  0.5262 
## F-statistic: 67.07 on 2 and 117 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_tidy &amp;lt;- tidy(model_y1)
model_tidy[2,1] &amp;lt;- &amp;quot;SMB&amp;quot;

gt_table_model &amp;lt;- gt(model_tidy)

gt_table_model &amp;lt;- 
  gt_table_model %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Market-neutral portfolio excess returns regressed against SMB&amp;quot;,
    subtitle = md(&amp;quot;(but HML is an ***omitted variable***)&amp;quot;)
  #) %&amp;gt;% tab_source_note(
  #   source_note = md(&amp;quot;the source is ... FRED&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 4
  ) %&amp;gt;% fmt_scientific(
    columns = vars(statistic, p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 14
  )

gt_table_model&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ecyprinlxi .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ecyprinlxi .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ecyprinlxi .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ecyprinlxi .gt_subtitle {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ecyprinlxi .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ecyprinlxi .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ecyprinlxi .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ecyprinlxi .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ecyprinlxi .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ecyprinlxi .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ecyprinlxi .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ecyprinlxi .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ecyprinlxi .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ecyprinlxi .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ecyprinlxi .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ecyprinlxi .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ecyprinlxi .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ecyprinlxi .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ecyprinlxi .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ecyprinlxi .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ecyprinlxi .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ecyprinlxi .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ecyprinlxi .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ecyprinlxi .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ecyprinlxi .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ecyprinlxi .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ecyprinlxi .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ecyprinlxi .gt_left {
  text-align: left;
}

#ecyprinlxi .gt_center {
  text-align: center;
}

#ecyprinlxi .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ecyprinlxi .gt_font_normal {
  font-weight: normal;
}

#ecyprinlxi .gt_font_bold {
  font-weight: bold;
}

#ecyprinlxi .gt_font_italic {
  font-style: italic;
}

#ecyprinlxi .gt_super {
  font-size: 65%;
}

#ecyprinlxi .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;ecyprinlxi&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Market-neutral portfolio excess returns regressed against SMB&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;(but HML is an &lt;em&gt;&lt;strong&gt;omitted variable&lt;/strong&gt;&lt;/em&gt;)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0588&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0053&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.11 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;1&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.74 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;20&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SMB&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.6771&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.1064&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;6.37&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.86 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;9&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-2-house-prices---heteroskedasticity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Question 2: House Prices - Heteroskedasticity&lt;/h2&gt;
&lt;p&gt;20.19.2. Josh regressed house prices (as the response or dependent variable) against two explanatory variables: square footage (SQFEET) and the number of rooms in the house (ROOMS). The dependent variable, PRICE, is expressed in thousands of dollars ($000); e.g., the average PRICE is $XXX.000 because the average house price in the sample of 150 houses is $XXX.000. The units of SQFEET are unadjusted units; e.g., the average SQFEET in the sample is X,XXX ft^2. The variable ROOMS is equal to the sum of the number of bedrooms and bathrooms; because much of the sample is 2- and 3-bedroom houses with 2 baths, the average of ROOM is X.XX. Josh’s regression results are displayed below.&lt;/p&gt;
&lt;p&gt;Josh is concerned that the data might not be homoscedastic. He decides to conduct a White test for heteroskedasticity. In this test, he regresses the squared residuals against each of the explanatory variables and the cross-product of the explanatory variables (including the product of each variable with itself). The results of this regression are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(tidyverse)
# library(broom)
# library(gt)

intercept &amp;lt;- 40
intercept_sig &amp;lt;- .01

x1_mu &amp;lt;- 1000
x1_sig &amp;lt;- 400
x1_beta &amp;lt;- 0.3

x2_mu &amp;lt;- 4.5
x2_sig &amp;lt;- 2
x2_beta &amp;lt;- 20.0

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 500 # low value gets low p-value b/c low noise

size &amp;lt;- 150
set.seed(65)

rho_noise_x1 &amp;lt;- 0.7

ft2_start = 800
ft2_end = 3000

results &amp;lt;- tibble(
  x0_sn = rnorm(size),
  x1_sn = rnorm(size),
  x2_sn = rnorm(size),
  e = rnorm(size),
  # e_corr = rho_noise_x1 * x1_sn + sqrt(1 - rho_noise_x1^2) * noise_sn,
  # 
  x0 = intercept + x0_sn * intercept_sig,
  # x1 = x1_mu + x1_sn * x1_sig, 
  x1 = seq(ft2_start, ft2_end - 1, by = (ft2_end - ft2_start)/size),
  x2 = x2_mu + x2_sn * x2_sig,
  # 
  # here the heteroskadisticity is deliberately introduced:
  # the error term&amp;#39;s sigma is increasing with SQFEET, x1
  e_sigma = ((x1 - ft2_start)/100)^2, 
  # noise = noise_sn_corr * noise_sig, 
  #  
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size)
)

results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 + (x1_b * x1) + (x2_b * x2) + (e * e_sigma)
)

# cor(results1$e * results1$e_sigma, results1$x1)

model_house &amp;lt;- lm(y ~ x1 + x2, data = results1)
summary(model_house)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -710.33  -79.41    8.68   61.16  731.16 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -9.45712   69.59813  -0.136    0.892    
## x1           0.36961    0.02734  13.522   &amp;lt;2e-16 ***
## x2           8.78355    8.61236   1.020    0.309    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 211.1 on 147 degrees of freedom
## Multiple R-squared:  0.5548, Adjusted R-squared:  0.5488 
## F-statistic: 91.61 on 2 and 147 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_tidy_house &amp;lt;- tidy(model_house)
model_tidy_house[2,1] &amp;lt;- &amp;quot;SQFEET&amp;quot;
model_tidy_house[3,1] &amp;lt;- &amp;quot;ROOMS&amp;quot;

gt_table_model_house &amp;lt;- gt(model_tidy_house)

gt_table_model_house &amp;lt;- 
  gt_table_model_house %&amp;gt;% 
  tab_options(
    table.font.size = 12
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;House Price regressed against ft^2 (SQFEET) + ROOMS(#)&amp;quot;,
    subtitle = md(&amp;quot;House Price in Thousands **($000)** of dollars&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Residual standard error: 211.1 on 147 degrees of freedom&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Multiple R-squared:  0.5548,  Adjusted R-squared:  0.5488&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;F-statistic: 91.61 on 2 and 147 DF,  p-value: &amp;lt; 2.2e-16&amp;quot;)  
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12,
    source_notes.font.size = 12
  )

gt_table_model_house&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ptzwsyqmjm .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ptzwsyqmjm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ptzwsyqmjm .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ptzwsyqmjm .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ptzwsyqmjm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ptzwsyqmjm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ptzwsyqmjm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ptzwsyqmjm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ptzwsyqmjm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ptzwsyqmjm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ptzwsyqmjm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ptzwsyqmjm .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ptzwsyqmjm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ptzwsyqmjm .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ptzwsyqmjm .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ptzwsyqmjm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ptzwsyqmjm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ptzwsyqmjm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ptzwsyqmjm .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ptzwsyqmjm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ptzwsyqmjm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ptzwsyqmjm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ptzwsyqmjm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ptzwsyqmjm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ptzwsyqmjm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ptzwsyqmjm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ptzwsyqmjm .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#ptzwsyqmjm .gt_left {
  text-align: left;
}

#ptzwsyqmjm .gt_center {
  text-align: center;
}

#ptzwsyqmjm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ptzwsyqmjm .gt_font_normal {
  font-weight: normal;
}

#ptzwsyqmjm .gt_font_bold {
  font-weight: bold;
}

#ptzwsyqmjm .gt_font_italic {
  font-style: italic;
}

#ptzwsyqmjm .gt_super {
  font-size: 65%;
}

#ptzwsyqmjm .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;ptzwsyqmjm&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;House Price regressed against ft^2 (SQFEET) + ROOMS(#)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;House Price in Thousands &lt;strong&gt;($000)&lt;/strong&gt; of dollars&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;9.457&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;69.598&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.136&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.92 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SQFEET&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.370&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.027&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;13.522&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.40 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;27&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;ROOMS&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.784&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.612&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.020&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.09 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Residual standard error: 211.1 on 147 degrees of freedom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Multiple R-squared:  0.5548,	Adjusted R-squared:  0.5488&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;F-statistic: 91.61 on 2 and 147 DF,  p-value: &amp;lt; 2.2e-16&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$y) # price&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 728.2827&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x0) # intercept&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 39.99987&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x1) # sqfeet&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1892.667&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x2) # rooms&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4.347188&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ressq &amp;lt;- resid(model_house)^2
results_v2 &amp;lt;- cbind(results1, ressq)
white_test &amp;lt;- lm(ressq ~ x1 * x2 + I(x1^2) + I(x2^2), data = results_v2)
summary(white_test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = ressq ~ x1 * x2 + I(x1^2) + I(x2^2), data = results_v2)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -163838  -26649   -2683    6834  385087 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  1.594e+05  7.490e+04   2.128 0.035015 *  
## x1          -1.962e+02  6.936e+01  -2.828 0.005346 ** 
## x2          -1.578e+04  1.490e+04  -1.059 0.291521    
## I(x1^2)      6.017e-02  1.742e-02   3.454 0.000727 ***
## I(x2^2)      1.494e+02  1.265e+03   0.118 0.906193    
## x1:x2        1.002e+01  4.936e+00   2.030 0.044183 *  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 76920 on 144 degrees of freedom
## Multiple R-squared:  0.3381, Adjusted R-squared:  0.3152 
## F-statistic: 14.71 on 5 and 144 DF,  p-value: 1.201e-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;white_tidy &amp;lt;- tidy(white_test)
white_tidy[2,1] &amp;lt;- &amp;quot;SQFEET&amp;quot;
white_tidy[3,1] &amp;lt;- &amp;quot;ROOMS&amp;quot;
white_tidy[4,1] &amp;lt;- &amp;quot;SQFEET^2&amp;quot;
white_tidy[5,1] &amp;lt;- &amp;quot;ROOMS^2&amp;quot;
white_tidy[6,1] &amp;lt;- &amp;quot;SQFEET*ROOMS&amp;quot;

gt_table_white &amp;lt;- gt(white_tidy)

gt_table_white &amp;lt;- 
  gt_table_white %&amp;gt;% 
  tab_options(
    table.font.size = 12,
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;RESIDUAL^2 regressed against SQFEET + ROOMS + SQFEET^2 + ROOMS^2 + ROOMS*SQFEET&amp;quot;,
    subtitle = md(&amp;quot;White&amp;#39;s Test for Heteroskedasticity&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Residual standard error: 76920 on 144 degrees of freedom&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Multiple R-squared: 0.3381,   Adjusted R-squared: 0.3152, F-statistic: 14.71 on 5 and 144 DF, p-value: 1.201e-11&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
     columns = vars(estimate, std.error),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12,
    source_notes.font.size = 12
  )

gt_table_white&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#budlbtjeqa .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#budlbtjeqa .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#budlbtjeqa .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#budlbtjeqa .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#budlbtjeqa .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#budlbtjeqa .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#budlbtjeqa .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#budlbtjeqa .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#budlbtjeqa .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#budlbtjeqa .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#budlbtjeqa .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#budlbtjeqa .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#budlbtjeqa .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#budlbtjeqa .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#budlbtjeqa .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#budlbtjeqa .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#budlbtjeqa .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#budlbtjeqa .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#budlbtjeqa .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#budlbtjeqa .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#budlbtjeqa .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#budlbtjeqa .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#budlbtjeqa .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#budlbtjeqa .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#budlbtjeqa .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#budlbtjeqa .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#budlbtjeqa .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#budlbtjeqa .gt_left {
  text-align: left;
}

#budlbtjeqa .gt_center {
  text-align: center;
}

#budlbtjeqa .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#budlbtjeqa .gt_font_normal {
  font-weight: normal;
}

#budlbtjeqa .gt_font_bold {
  font-weight: bold;
}

#budlbtjeqa .gt_font_italic {
  font-style: italic;
}

#budlbtjeqa .gt_super {
  font-size: 65%;
}

#budlbtjeqa .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;budlbtjeqa&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;RESIDUAL^2 regressed against SQFEET + ROOMS + SQFEET^2 + ROOMS^2 + ROOMS*SQFEET&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;White&#39;s Test for Heteroskedasticity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.59 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;5&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.49 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;4&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.128&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.035&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SQFEET&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;1.96 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;6.94 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;1&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;2.828&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.005&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;ROOMS&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;1.58 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;4&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.49 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;4&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;1.059&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.292&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SQFEET^2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;6.02 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.74 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.454&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;ROOMS^2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.49 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;2&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.27 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;3&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.118&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.906&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SQFEET*ROOMS&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.00 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;1&lt;/sup&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.94&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.030&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.044&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Residual standard error: 76920 on 144 degrees of freedom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Multiple R-squared: 0.3381,	Adjusted R-squared: 0.3152, F-statistic: 14.71 on 5 and 144 DF, p-value: 1.201e-11&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# and the heteroskadisticity is visually VERY obvious!
results_v2 %&amp;gt;% ggplot(aes(x = x1, y = y)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-09-21-bt-question-set-p1-t2-20-19-regression-diagnostics-1st-set.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;question-3-multicollinearity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Question 3: Multicollinearity&lt;/h2&gt;
&lt;p&gt;20.19.3. Emily works for an insurance company and she has regressed medical costs (aka, the response or dependent variable) for a sample of patients against three independent variables: AGE, BMI, and CHARITY. The sample’s average age is X.X years. Body mass index (BMI) is mass divided by height squared and the sample’s average BMI is X.Y. CHARITY is the dollar amount of charitable spending in the last year; the sample average is $X.Y donated to charity in the last year. Emily’s regression results are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(gt)

intercept &amp;lt;- 150
intercept_sig &amp;lt;- 40

# age
x1_mu &amp;lt;- 38
x1_sig &amp;lt;- 7
x1_beta &amp;lt;- 50

# bmi
x2_mu &amp;lt;- 22
x2_sig &amp;lt;- 4
x2_beta &amp;lt;- 100

# spend
x3_mu &amp;lt;- 500
x3_sig &amp;lt;- 250
x3_beta &amp;lt;- -0.4

rho_x1_x2 = 0.3
rho_x1_x3 = 0.97

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 300 # low value gets low p-value b/c low noise

size &amp;lt;- 43
set.seed(12)

results &amp;lt;- tibble(
  x0_sn &amp;lt;- rnorm(size),
  x1_sn &amp;lt;- rnorm(size),
  x2_sn &amp;lt;- rnorm(size),
  x3_sn &amp;lt;- rnorm(size),
  #
  x0 = intercept + intercept_sig * x0_sn,
  #
  x1 = x1_mu + x1_sig * x1_sn,
  x2_sn_corr = rho_x1_x2*x1_sn + sqrt(1 - rho_x1_x2^2)*x2_sn,
  x2 = x2_mu + x2_sig * x2_sn_corr,
  x3_sn_corr = rho_x1_x3*x1_sn + sqrt(1 - rho_x1_x3^2)*x3_sn,
  x3 = x3_mu + x3_sig * x3_sn_corr,
  #
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size),
  x3_b = rep(x3_beta, size),
  noise = rnorm(size, 0, noise_sig)
)


results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 + (x1_b * x1) + (x2_b * x2) + (x3_b * x3) + noise
)

cor(results1$x1, results1$x3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.962464&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model &amp;lt;- lm(y ~ x1 + x2 + x3, data = results1)

model_x1 &amp;lt;- lm(x1 ~ x2 + x3, data = results1)
summary(model_x1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = x1 ~ x2 + x3, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -3.2878 -0.9601 -0.2345  1.1477  3.4376 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 24.022184   1.622772  14.803   &amp;lt;2e-16 ***
## x2           0.029178   0.072426   0.403    0.689    
## x3           0.026997   0.001234  21.883   &amp;lt;2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 1.733 on 40 degrees of freedom
## Multiple R-squared:  0.9266, Adjusted R-squared:  0.923 
## F-statistic: 252.6 on 2 and 40 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rsq_x1 &amp;lt;- summary(model_x1)$r.squared

model_x2 &amp;lt;- lm(x2 ~ x1 + x3, data = results1)
summary(model_x2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = x2 ~ x1 + x3, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -6.9298 -2.1503 -0.5579  2.5672  7.9527 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)  
## (Intercept) 16.9897894  8.5885276   1.978   0.0548 .
## x1           0.1384986  0.3437854   0.403   0.6892  
## x3          -0.0001614  0.0096805  -0.017   0.9868  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 3.776 on 40 degrees of freedom
## Multiple R-squared:  0.04833,    Adjusted R-squared:  0.0007499 
## F-statistic: 1.016 on 2 and 40 DF,  p-value: 0.3713&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rsq_x2 &amp;lt;- summary(model_x2)$r.squared

model_x3 &amp;lt;- lm(x3 ~ x1 + x2, data = results1)
summary(model_x3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = x3 ~ x1 + x2, data = results1)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -119.098  -39.213    9.803   48.540   99.936 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -802.99922   74.04616 -10.845 1.77e-13 ***
## x1            34.18590    1.56221  21.883  &amp;lt; 2e-16 ***
## x2            -0.04306    2.58249  -0.017    0.987    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 61.67 on 40 degrees of freedom
## Multiple R-squared:  0.9263, Adjusted R-squared:  0.9227 
## F-statistic: 251.5 on 2 and 40 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rsq_x3 &amp;lt;- summary(model_x3)$r.squared

var_if_x1 &amp;lt;- 1/(1 - rsq_x1 )
var_if_x2 &amp;lt;- 1/(1 - rsq_x2)
var_if_x3 &amp;lt;- 1/(1 - rsq_x3)

multi_table &amp;lt;- tibble(
  regression = c(1,2,3),
  response = c(&amp;quot;AGE&amp;quot;, &amp;quot;BMI&amp;quot;, &amp;quot;CHARITY&amp;quot;),
  explanatory = c(&amp;quot;BMI + CHARITY&amp;quot;, &amp;quot;AGE + CHARITY&amp;quot;, &amp;quot;AGE + BMI&amp;quot;),
  Rsquared = c(rsq_x1, rsq_x2, rsq_x3)
)


model_tidy &amp;lt;- tidy(model)
model_tidy[2,1] &amp;lt;- &amp;quot;AGE&amp;quot;
model_tidy[3,1] &amp;lt;- &amp;quot;BMI&amp;quot;
model_tidy[4,1] &amp;lt;- &amp;quot;CHARITY&amp;quot;

gt_table_model &amp;lt;- gt(model_tidy)

gt_table_model &amp;lt;- 
  gt_table_model %&amp;gt;% 
  tab_options(
    table.font.size = 12
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Medical COST regressed against AGE + BMI + CHARITY($)&amp;quot;,
    subtitle = md(&amp;quot;Simulated data&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Residual standard error: 325.1 on 39 degrees of freedom&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Multiple R-squared: 0.6961,   Adjusted R-squared: 0.6727, F-statistic: 29.77 on 3 and 39 DF, p-value: 3.514e-10&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 2
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12,
     source_notes.font.size = 12
  )

##

gt_multi_table &amp;lt;- gt(multi_table)

gt_multi_table &amp;lt;- 
  gt_multi_table %&amp;gt;% 
  tab_options(
    table.font.size = 12
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Each response variable regressed against the others&amp;quot;,
    subtitle = md(&amp;quot;Testing for multicollinearity&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Note: According to GARP, the standard test of&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;multicollinearity is the variance inflation factor (VIF)&amp;quot;)
  ) %&amp;gt;% cols_label(
    regression = &amp;quot;Regression&amp;quot;,
    response = &amp;quot;Response&amp;quot;,
    explanatory = &amp;quot;Explanatory&amp;quot;,
    Rsquared = &amp;quot;R-squared&amp;quot;,
  ) %&amp;gt;% cols_align(
    align = &amp;quot;center&amp;quot;,
    columns = vars(regression)
  ) %&amp;gt;% fmt_number(
    columns = vars(Rsquared),
    decimals = 3
  # ) %&amp;gt;% fmt_scientific(
    # columns = vars(p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12,
     source_notes.font.size = 12
  )

summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2 + x3, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -923.93 -243.27   21.75  192.64  554.97 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -165.2505   774.7267  -0.213   0.8322    
## x1            63.6695    29.6571   2.147   0.0381 *  
## x2           102.4645    13.6123   7.527 4.09e-09 ***
## x3            -0.9461     0.8334  -1.135   0.2632    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 325.1 on 39 degrees of freedom
## Multiple R-squared:  0.6961, Adjusted R-squared:  0.6727 
## F-statistic: 29.77 on 3 and 39 DF,  p-value: 3.514e-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(multi_table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    regression    response         explanatory           Rsquared      
##  Min.   :1.0   Length:3           Length:3           Min.   :0.04833  
##  1st Qu.:1.5   Class :character   Class :character   1st Qu.:0.48734  
##  Median :2.0   Mode  :character   Mode  :character   Median :0.92634  
##  Mean   :2.0                                         Mean   :0.63377  
##  3rd Qu.:2.5                                         3rd Qu.:0.92649  
##  Max.   :3.0                                         Max.   :0.92663&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gt_table_model&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#lqqjmyauaw .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lqqjmyauaw .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lqqjmyauaw .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lqqjmyauaw .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lqqjmyauaw .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lqqjmyauaw .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lqqjmyauaw .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lqqjmyauaw .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lqqjmyauaw .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lqqjmyauaw .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lqqjmyauaw .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lqqjmyauaw .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#lqqjmyauaw .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lqqjmyauaw .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#lqqjmyauaw .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#lqqjmyauaw .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lqqjmyauaw .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#lqqjmyauaw .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lqqjmyauaw .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#lqqjmyauaw .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lqqjmyauaw .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lqqjmyauaw .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lqqjmyauaw .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lqqjmyauaw .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lqqjmyauaw .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#lqqjmyauaw .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lqqjmyauaw .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#lqqjmyauaw .gt_left {
  text-align: left;
}

#lqqjmyauaw .gt_center {
  text-align: center;
}

#lqqjmyauaw .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lqqjmyauaw .gt_font_normal {
  font-weight: normal;
}

#lqqjmyauaw .gt_font_bold {
  font-weight: bold;
}

#lqqjmyauaw .gt_font_italic {
  font-style: italic;
}

#lqqjmyauaw .gt_super {
  font-size: 65%;
}

#lqqjmyauaw .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;lqqjmyauaw&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Medical COST regressed against AGE + BMI + CHARITY($)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Simulated data&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;165.25&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;774.73&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.21&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.32 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;63.67&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;29.66&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.15&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.81 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;2&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;BMI&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;102.46&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;13.61&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.53&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.09 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;9&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;CHARITY&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.95&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.83&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;1.14&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.63 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Residual standard error: 325.1 on 39 degrees of freedom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Multiple R-squared: 0.6961,	Adjusted R-squared: 0.6727, F-statistic: 29.77 on 3 and 39 DF, p-value: 3.514e-10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gt_multi_table&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#gphnlsqzwo .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 12px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gphnlsqzwo .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gphnlsqzwo .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gphnlsqzwo .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gphnlsqzwo .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gphnlsqzwo .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gphnlsqzwo .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gphnlsqzwo .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gphnlsqzwo .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gphnlsqzwo .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gphnlsqzwo .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gphnlsqzwo .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#gphnlsqzwo .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gphnlsqzwo .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#gphnlsqzwo .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#gphnlsqzwo .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gphnlsqzwo .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#gphnlsqzwo .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gphnlsqzwo .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#gphnlsqzwo .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gphnlsqzwo .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gphnlsqzwo .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gphnlsqzwo .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gphnlsqzwo .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gphnlsqzwo .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#gphnlsqzwo .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gphnlsqzwo .gt_sourcenote {
  font-size: 12px;
  padding: 4px;
}

#gphnlsqzwo .gt_left {
  text-align: left;
}

#gphnlsqzwo .gt_center {
  text-align: center;
}

#gphnlsqzwo .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gphnlsqzwo .gt_font_normal {
  font-weight: normal;
}

#gphnlsqzwo .gt_font_bold {
  font-weight: bold;
}

#gphnlsqzwo .gt_font_italic {
  font-style: italic;
}

#gphnlsqzwo .gt_super {
  font-size: 65%;
}

#gphnlsqzwo .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;gphnlsqzwo&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Each response variable regressed against the others&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Testing for multicollinearity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Regression&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Response&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Explanatory&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;R-squared&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;BMI + CHARITY&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.927&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;2&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;BMI&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE + CHARITY&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.048&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;3&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;CHARITY&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE + BMI&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.926&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Note: According to GARP, the standard test of&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;multicollinearity is the variance inflation factor (VIF)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$y) # cost&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4079.452&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x0) # intercept&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 145.2152&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x1) # age&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 38.48411&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x2) # bmi&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 22.2372&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x3) # spend&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 511.6571&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# let&amp;#39;s see the VIFs
var_if_x1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 13.63041&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var_if_x2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.050788&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var_if_x3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 13.57542&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-18: Multivariate regressions</title>
      <link>/post/2020/bt-question-set-p1-t2-20-18-multivariate-regressions/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-18-multivariate-regressions/</guid>
      <description>


&lt;div id=&#34;multiple-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Multiple regression&lt;/h2&gt;
&lt;div id=&#34;question-1-fama-french&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 1: Fama-french&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(gt)

intercept &amp;lt;- .03
intercept_sig &amp;lt;- .01

x1_mu &amp;lt;- .04
x1_sig &amp;lt;- .01
x1_beta &amp;lt;- 0.4

x2_mu &amp;lt;- .03
x2_sig &amp;lt;- .01
x2_beta &amp;lt;- -0.6

x3_mu &amp;lt;- .03
x3_sig &amp;lt;- .01
x3_beta &amp;lt;- -0.3

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 0 # low value gets low p-value b/c low noise

size &amp;lt;- 96
set.seed(18)

results &amp;lt;- tibble(
  x0 = rnorm(size, intercept, intercept_sig),
  x1 = rnorm(size, x1_mu, x1_sig),
  x2 = rnorm(size, x2_mu, x2_sig),
  x3 = rnorm(size, x3_mu, x3_sig),
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size),
  x3_b = rep(x3_beta, size),
  noise = rnorm(size, 0, noise_sig)
)


results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 +x1_b * x1 + x2_b * x2 + x3_b * x3 + noise
)

model &amp;lt;- lm(y ~ x1 + x2 + x3, data = results1)
summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2 + x3, data = results1)
## 
## Residuals:
##        Min         1Q     Median         3Q        Max 
## -0.0179934 -0.0063017 -0.0002194  0.0069123  0.0252648 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  0.026900   0.005785   4.650 1.11e-05 ***
## x1           0.501752   0.099805   5.027 2.44e-06 ***
## x2          -0.702932   0.096522  -7.283 1.09e-10 ***
## x3          -0.276534   0.102339  -2.702   0.0082 ** 
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.00983 on 92 degrees of freedom
## Multiple R-squared:  0.4619, Adjusted R-squared:  0.4444 
## F-statistic: 26.33 on 3 and 92 DF,  p-value: 2.206e-12&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_tidy &amp;lt;- tidy(model)
model_tidy[2,1] &amp;lt;- &amp;quot;MKT&amp;quot;
model_tidy[3,1] &amp;lt;- &amp;quot;SMB&amp;quot;
model_tidy[4,1] &amp;lt;- &amp;quot;HML&amp;quot;

gt_table_model &amp;lt;- gt(model_tidy)

gt_table_model &amp;lt;- 
  gt_table_model %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Portfolio excess returns regressed against MKT + SMB + HML&amp;quot;,
    subtitle =&amp;quot;i.e., Fama-French three-factor model&amp;quot;
  #) %&amp;gt;% tab_source_note(
  #   source_note = md(&amp;quot;the source is ... FRED&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(statistic, p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )

gt_table_model&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pgiqepqpuz .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pgiqepqpuz .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pgiqepqpuz .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pgiqepqpuz .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pgiqepqpuz .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pgiqepqpuz .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pgiqepqpuz .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pgiqepqpuz .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pgiqepqpuz .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pgiqepqpuz .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pgiqepqpuz .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pgiqepqpuz .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pgiqepqpuz .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pgiqepqpuz .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pgiqepqpuz .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pgiqepqpuz .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pgiqepqpuz .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pgiqepqpuz .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pgiqepqpuz .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pgiqepqpuz .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pgiqepqpuz .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pgiqepqpuz .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pgiqepqpuz .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pgiqepqpuz .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pgiqepqpuz .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pgiqepqpuz .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pgiqepqpuz .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#pgiqepqpuz .gt_left {
  text-align: left;
}

#pgiqepqpuz .gt_center {
  text-align: center;
}

#pgiqepqpuz .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pgiqepqpuz .gt_font_normal {
  font-weight: normal;
}

#pgiqepqpuz .gt_font_bold {
  font-weight: bold;
}

#pgiqepqpuz .gt_font_italic {
  font-style: italic;
}

#pgiqepqpuz .gt_super {
  font-size: 65%;
}

#pgiqepqpuz .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;pgiqepqpuz&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Portfolio excess returns regressed against MKT + SMB + HML&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;i.e., Fama-French three-factor model&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.027&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.006&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.65&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.11 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;5&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;MKT&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.502&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.100&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;5.03&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.44 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;6&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SMB&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.703&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.097&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;7.28&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.09 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;10&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;HML&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.277&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.102&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;2.70&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.20 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;3&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-2-house-prices&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 2: House Prices&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(gt)

intercept &amp;lt;- 40
intercept_sig &amp;lt;- .01

x1_mu &amp;lt;- 1200
x1_sig &amp;lt;- 30
x1_beta &amp;lt;- 0.35

x2_mu &amp;lt;- 4.5
x2_sig &amp;lt;- 2
x2_beta &amp;lt;- 10.0

x3_mu &amp;lt;- 15
x3_sig &amp;lt;- 4
x3_beta &amp;lt;- -8.0

noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 20 # low value gets low p-value b/c low noise

size &amp;lt;- 96
set.seed(43)

results &amp;lt;- tibble(
  x0 = rnorm(size, intercept, intercept_sig),
  x1 = rnorm(size, x1_mu, x1_sig),
  x2 = rnorm(size, x2_mu, x2_sig),
  x3 = rnorm(size, x3_mu, x3_sig),
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size),
  x3_b = rep(x3_beta, size),
  noise = rnorm(size, 0, noise_sig)
)


results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 +x1_b * x1 + x2_b * x2 + x3_b * x3 + noise
)

model &amp;lt;- lm(y ~ x1 + x2 + x3, data = results1)
summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2 + x3, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -40.088 -13.508  -1.795  13.819  41.934 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 110.95667   76.98277   1.441    0.153    
## x1            0.29138    0.06283   4.638 1.16e-05 ***
## x2            9.53971    0.85291  11.185  &amp;lt; 2e-16 ***
## x3           -8.06268    0.48275 -16.702  &amp;lt; 2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 18.28 on 92 degrees of freedom
## Multiple R-squared:  0.8378, Adjusted R-squared:  0.8325 
## F-statistic: 158.4 on 3 and 92 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_tidy &amp;lt;- tidy(model)
model_tidy[2,1] &amp;lt;- &amp;quot;SQFEET&amp;quot;
model_tidy[3,1] &amp;lt;- &amp;quot;ROOMS&amp;quot;
model_tidy[4,1] &amp;lt;- &amp;quot;AGE&amp;quot;

gt_table_model &amp;lt;- gt(model_tidy)

gt_table_model &amp;lt;- 
  gt_table_model %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;House Price regressed against ft^2 (SQFEET) + ROOMS(#) + AGE(years)&amp;quot;,
    subtitle = md(&amp;quot;House Price in Thousands **($000)** of dollars&amp;quot;)
  #) %&amp;gt;% tab_source_note(
  #   source_note = md(&amp;quot;the source is ... FRED&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )

gt_table_model&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#vghvnzctdm .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vghvnzctdm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vghvnzctdm .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vghvnzctdm .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vghvnzctdm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vghvnzctdm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vghvnzctdm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vghvnzctdm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vghvnzctdm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vghvnzctdm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vghvnzctdm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vghvnzctdm .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#vghvnzctdm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vghvnzctdm .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#vghvnzctdm .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#vghvnzctdm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vghvnzctdm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#vghvnzctdm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vghvnzctdm .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#vghvnzctdm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vghvnzctdm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vghvnzctdm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vghvnzctdm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vghvnzctdm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vghvnzctdm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#vghvnzctdm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vghvnzctdm .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#vghvnzctdm .gt_left {
  text-align: left;
}

#vghvnzctdm .gt_center {
  text-align: center;
}

#vghvnzctdm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vghvnzctdm .gt_font_normal {
  font-weight: normal;
}

#vghvnzctdm .gt_font_bold {
  font-weight: bold;
}

#vghvnzctdm .gt_font_italic {
  font-style: italic;
}

#vghvnzctdm .gt_super {
  font-size: 65%;
}

#vghvnzctdm .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;vghvnzctdm&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;House Price regressed against ft^2 (SQFEET) + ROOMS(#) + AGE(years)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;House Price in Thousands &lt;strong&gt;($000)&lt;/strong&gt; of dollars&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;110.957&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;76.983&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.441&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.53 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SQFEET&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.291&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.063&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.638&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.16 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;5&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;ROOMS&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;9.540&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.853&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;11.185&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.64 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;19&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;8.063&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.483&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;16.702&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.33 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;29&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$y) # price&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 386.051&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x0) # intercept&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 40.0002&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x1) # sqfeet&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1203.809&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x2) # rooms&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4.548471&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x3) # age&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 14.76695&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;question-3-insurance&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 3: Insurance&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(gt)

intercept &amp;lt;- 150
intercept_sig &amp;lt;- 40

# age
x1_mu &amp;lt;- 38
x1_sig &amp;lt;- 7
x1_beta &amp;lt;- 50

# bmi
x2_mu &amp;lt;- 22
x2_sig &amp;lt;- 4
x2_beta &amp;lt;- 100

# smoker
x3_mu &amp;lt;- 15
x3_sig &amp;lt;- 0.5
x3_beta &amp;lt;- 535

# spend
x4_mu &amp;lt;- 500
x4_sig &amp;lt;- 250
x4_beta &amp;lt;- -0.4


noise_mu &amp;lt;- 0
noise_sig &amp;lt;- 300 # low value gets low p-value b/c low noise

size &amp;lt;- 43
set.seed(12)

results &amp;lt;- tibble(
  x0 = rnorm(size, intercept, intercept_sig),
  x1 = round(rnorm(size, x1_mu, x1_sig)),
  x2 = rnorm(size, x2_mu, x2_sig),
  x3 = round(runif(size)-.35), # smoker = 1, non = 0
  x4 = rnorm(size, x4_mu, x4_sig),
  x1_b = rep(x1_beta, size),
  x2_b = rep(x2_beta, size),
  x3_b = rep(x3_beta, size),
  x4_b = rep(x4_beta, size),
  noise = rnorm(size, 0, noise_sig)
)


results1 &amp;lt;- results %&amp;gt;% mutate(
  y = x0 +x1_b * x1 + x2_b * x2 + x3_b * x3 + x4_b * x4 + noise
)

model &amp;lt;- lm(y ~ x1 + x2 + x3 + x4, data = results1)
summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2 + x3 + x4, data = results1)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -635.96 -169.65   15.59  219.73  543.51 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -324.2133   415.7736  -0.780 0.440348    
## x1            56.9518     7.5517   7.542 4.60e-09 ***
## x2           111.7571    11.9374   9.362 2.06e-11 ***
## x3           454.0799   125.8293   3.609 0.000884 ***
## x4            -0.5485     0.1793  -3.058 0.004064 ** 
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 298.3 on 38 degrees of freedom
## Multiple R-squared:  0.8215, Adjusted R-squared:  0.8027 
## F-statistic: 43.71 on 4 and 38 DF,  p-value: 1.009e-13&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_tidy &amp;lt;- tidy(model)
model_tidy[2,1] &amp;lt;- &amp;quot;AGE&amp;quot;
model_tidy[3,1] &amp;lt;- &amp;quot;BMI&amp;quot;
model_tidy[4,1] &amp;lt;- &amp;quot;SMOKER&amp;quot;
model_tidy[5,1] &amp;lt;- &amp;quot;CHARITY&amp;quot;

gt_table_model &amp;lt;- gt(model_tidy)

gt_table_model &amp;lt;- 
  gt_table_model %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Medical COST regressed against AGE + BMI + SMOKER(1/0) + CHARITY($)&amp;quot;,
    subtitle = md(&amp;quot;Simulated dataset&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Residual standard error: 295.2 on 38 degrees of freedom&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Multiple R-squared:  0.8343,  Adjusted R-squared:  0.8168&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;F-statistic: 47.82 on 4 and 38 DF,  p-value: 2.486e-14&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic, p.value),
    decimals = 2
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )


gt_table_model&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#iwuuabqqil .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#iwuuabqqil .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iwuuabqqil .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#iwuuabqqil .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#iwuuabqqil .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iwuuabqqil .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iwuuabqqil .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#iwuuabqqil .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#iwuuabqqil .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#iwuuabqqil .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#iwuuabqqil .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#iwuuabqqil .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#iwuuabqqil .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#iwuuabqqil .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#iwuuabqqil .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#iwuuabqqil .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#iwuuabqqil .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#iwuuabqqil .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iwuuabqqil .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#iwuuabqqil .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iwuuabqqil .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#iwuuabqqil .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#iwuuabqqil .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iwuuabqqil .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iwuuabqqil .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#iwuuabqqil .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iwuuabqqil .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#iwuuabqqil .gt_left {
  text-align: left;
}

#iwuuabqqil .gt_center {
  text-align: center;
}

#iwuuabqqil .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#iwuuabqqil .gt_font_normal {
  font-weight: normal;
}

#iwuuabqqil .gt_font_bold {
  font-weight: bold;
}

#iwuuabqqil .gt_font_italic {
  font-style: italic;
}

#iwuuabqqil .gt_super {
  font-size: 65%;
}

#iwuuabqqil .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;iwuuabqqil&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Medical COST regressed against AGE + BMI + SMOKER(1/0) + CHARITY($)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Simulated dataset&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;324.21&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;415.77&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.78&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.40 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AGE&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;56.95&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.55&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.54&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.60 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;9&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;BMI&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;111.76&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;11.94&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;9.36&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.06 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;11&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SMOKER&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;454.08&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;125.83&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.61&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;8.84 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;4&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;CHARITY&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;0.55&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.18&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;3.06&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.06 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;3&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Residual standard error: 295.2 on 38 degrees of freedom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Multiple R-squared:  0.8343,	Adjusted R-squared:  0.8168&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;F-statistic: 47.82 on 4 and 38 DF,  p-value: 2.486e-14&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$y) # cost&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4150.588&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x0) # intercept&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 145.2152&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x1) # age&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 38.51163&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x2) # bmi&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 22.16166&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x3) # smoker&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.1627907&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(results1$x4) # charity&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 490.6912&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-17: Univariate regressions continued (2nd set v2)</title>
      <link>/post/2020/bt-question-set-p1-t2-20-17-univariate-regressions-continued-2nd-set-v2/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-17-univariate-regressions-continued-2nd-set-v2/</guid>
      <description>


&lt;div id=&#34;learning-objectives&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Learning objectives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Construct, apply, and interpret hypothesis tests and confidence intervals for a single regression coefficient in a regression.&lt;/li&gt;
&lt;li&gt;Explain the steps needed to perform a hypothesis test in a linear regression.&lt;/li&gt;
&lt;li&gt;Describe the relationship between a t-statistic, its p-value, and a confidence interval.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s load some packages!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(tidyquant)
library(lubridate)
library(readxl)
library(timetk)
library(tibbletime)
library(quantmod)
library(PerformanceAnalytics)
library(scales)
library(broom)
library(gt)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;first-question&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;First question&lt;/h3&gt;
&lt;p&gt;BT 20.17.1. Below the results of a linear regression analysis are displayed. The dataset is monthly returns over a six-year period; i.e., n = 72 months. The gross returns of Apple’s stock (ticker: AAPL) were regressed against the S&amp;amp;P 1500 Index (the S&amp;amp;P 1500 is our proxy for the market). The explanatory variable is SP_1500 and the response (aka, dependent) variable is AAPL.&lt;/p&gt;
&lt;p&gt;Question: Which is nearest to the 90.0% confidence interval for the beta of Apple’s (AAPL) stock?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AAPL &amp;lt;- tq_get(&amp;#39;AAPL&amp;#39;,
               from = &amp;quot;2009-01-01&amp;quot;,
               to = &amp;quot;2020-01-01&amp;quot;)

SP1500 &amp;lt;- tq_get(&amp;#39;SPTM&amp;#39;,
               from = &amp;quot;2009-01-01&amp;quot;,
               to = &amp;quot;2020-01-01&amp;quot;)

AAPL &amp;lt;- AAPL %&amp;gt;% select(date, adjusted)
SP1500 &amp;lt;- SP1500 %&amp;gt;% select(date, adjusted)

AAPL_monthly &amp;lt;- AAPL %&amp;gt;% 
  tq_transmute(select = adjusted, mutate = to.monthly, indexAt = &amp;quot;lastof&amp;quot;)
SP1500_monthly &amp;lt;- SP1500 %&amp;gt;% 
  tq_transmute(select = adjusted, mutate = to.monthly, indexAt = &amp;quot;lastof&amp;quot;)

AAPL_monthly &amp;lt;- AAPL_monthly %&amp;gt;% mutate(
  r_m_AAPL = log(adjusted/lag(adjusted)))
SP1500_monthly &amp;lt;-SP1500_monthly %&amp;gt;% mutate(
  r_m_SP = log(adjusted/lag(adjusted)))

AAPL_monthly &amp;lt;- AAPL_monthly %&amp;gt;% 
  rename(date_AAPL = date,
         adj_AAPL = adjusted)
SP1500_monthly &amp;lt;- SP1500_monthly %&amp;gt;% 
  rename(date_SP = date,
         adj_SP = adjusted)

both_monthly &amp;lt;- cbind(SP1500_monthly, AAPL_monthly)

both_72 &amp;lt;- both_monthly[-c(1:60), ]
both_72 &amp;lt;- both_72 %&amp;gt;% rename(r_SP_1500 = r_m_SP)
saveRDS(both_72, &amp;quot;t2-20-17-aapl-sp1500.rds&amp;quot;)

con &amp;lt;- url(&amp;quot;http://frm-bionicturtle.s3.amazonaws.com/david/t2-20-17-aapl-sp1500.rds&amp;quot;)
both_72 &amp;lt;- readRDS(con)
close(con)


model_72 &amp;lt;- lm(r_m_AAPL ~ r_SP_1500, data = both_72)
summary(model_72)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = r_m_AAPL ~ r_SP_1500, data = both_72)
## 
## Residuals:
##       Min        1Q    Median        3Q       Max 
## -0.226290 -0.027060  0.002344  0.040667  0.131313 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.007969   0.007477   1.066     0.29    
## r_SP_1500   1.269627   0.215600   5.889 1.23e-07 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.06123 on 70 degrees of freedom
## Multiple R-squared:  0.3313, Adjusted R-squared:  0.3217 
## F-statistic: 34.68 on 1 and 70 DF,  p-value: 1.23e-07&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1_model_72 &amp;lt;- both_72 %&amp;gt;% ggplot(aes(r_SP_1500, r_m_AAPL)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)

model_72_tidy &amp;lt;- tidy(model_72)

gt_table_model_72 &amp;lt;- gt(model_72_tidy)

gt_table_model_72 &amp;lt;- 
  gt_table_model_72 %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;AAPL versus S&amp;amp;P_1500: Gross (incl. Rf) monthly log return&amp;quot;,
    subtitle = md(&amp;quot;Six years (2014 - 2019), n = 72 months&amp;quot;)
  ) %&amp;gt;% 
  tab_source_note(
    source_note = &amp;quot;Source: tidyquant https://cran.r-project.org/web/packages/tidyquant/&amp;quot;
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% 
  tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )

gt_table_model_72&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pjsacxzwhl .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pjsacxzwhl .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pjsacxzwhl .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pjsacxzwhl .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pjsacxzwhl .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pjsacxzwhl .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pjsacxzwhl .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pjsacxzwhl .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pjsacxzwhl .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pjsacxzwhl .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pjsacxzwhl .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pjsacxzwhl .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pjsacxzwhl .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pjsacxzwhl .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pjsacxzwhl .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pjsacxzwhl .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pjsacxzwhl .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pjsacxzwhl .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pjsacxzwhl .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pjsacxzwhl .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pjsacxzwhl .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pjsacxzwhl .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pjsacxzwhl .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pjsacxzwhl .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pjsacxzwhl .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pjsacxzwhl .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pjsacxzwhl .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#pjsacxzwhl .gt_left {
  text-align: left;
}

#pjsacxzwhl .gt_center {
  text-align: center;
}

#pjsacxzwhl .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pjsacxzwhl .gt_font_normal {
  font-weight: normal;
}

#pjsacxzwhl .gt_font_bold {
  font-weight: bold;
}

#pjsacxzwhl .gt_font_italic {
  font-style: italic;
}

#pjsacxzwhl .gt_super {
  font-size: 65%;
}

#pjsacxzwhl .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;pjsacxzwhl&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;AAPL versus S&amp;amp;P_1500: Gross (incl. Rf) monthly log return&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Six years (2014 - 2019), n = 72 months&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.008&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.007&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.066&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.90 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;r_SP_1500&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.270&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.216&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;5.889&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.23 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;7&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Source: tidyquant https://cran.r-project.org/web/packages/tidyquant/&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1_model_72&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-bt-question-set-p1-t2-20-17-univariate-regressions-continued-2nd-set-v2.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(model_72)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = r_m_AAPL ~ r_SP_1500, data = both_72)
## 
## Residuals:
##       Min        1Q    Median        3Q       Max 
## -0.226290 -0.027060  0.002344  0.040667  0.131313 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.007969   0.007477   1.066     0.29    
## r_SP_1500   1.269627   0.215600   5.889 1.23e-07 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.06123 on 70 degrees of freedom
## Multiple R-squared:  0.3313, Adjusted R-squared:  0.3217 
## F-statistic: 34.68 on 1 and 70 DF,  p-value: 1.23e-07&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beta &amp;lt;- model_72_tidy$estimate[2]
se_beta &amp;lt;- model_72_tidy$std.error[2]
ci_confidence = 0.90
z_2s &amp;lt;- qnorm((1 + ci_confidence)/2)
ci_lower &amp;lt;- beta - se_beta*z_2s
ci_upper &amp;lt;- beta + se_beta*z_2s

ci_lower&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9149958&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ci_upper&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.624257&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;second-question&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Second question&lt;/h3&gt;
&lt;p&gt;BT 20.17.2. Peter wants to add a low-beta stock to his portfolio. One candidate is Kroger’s stock (ticker: KR). As a proxy for the market, he uses the S&amp;amp;P 1500. He wrangled gross monthly returns for KR and SP_1500 over ten years such that his sample size is 120 pairwise returns. The regression results are displayed below.&lt;/p&gt;
&lt;p&gt;Peters wants to make two decisions. In both cases, his test is a two-sided hypothesis test with 99.0% confidence. In the first test, the null hypothesis is that KR’s beta is zero. In the second test, the null hypothesis is that KR’s beta is one (1.0). Based on these regression results, which of the following is TRUE as a valid inference?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;KR &amp;lt;- tq_get(&amp;#39;KR&amp;#39;,
               from = &amp;quot;2009-01-01&amp;quot;,
               to = &amp;quot;2020-01-01&amp;quot;)

SP1500 &amp;lt;- tq_get(&amp;#39;SPTM&amp;#39;,
               from = &amp;quot;2009-01-01&amp;quot;,
               to = &amp;quot;2020-01-01&amp;quot;)

KR &amp;lt;- KR %&amp;gt;% select(date, adjusted)
SP1500 &amp;lt;- SP1500 %&amp;gt;% select(date, adjusted)

KR_monthly &amp;lt;- KR %&amp;gt;% 
  tq_transmute(select = adjusted, mutate = to.monthly, indexAt = &amp;quot;lastof&amp;quot;)
SP1500_monthly &amp;lt;- SP1500 %&amp;gt;% 
  tq_transmute(select = adjusted, mutate = to.monthly, indexAt = &amp;quot;lastof&amp;quot;)

KR_monthly &amp;lt;- KR_monthly %&amp;gt;% mutate(
  r_m_KR = log(adjusted/lag(adjusted)))

SP1500_monthly &amp;lt;-SP1500_monthly %&amp;gt;% mutate(
  r_m_SP = log(adjusted/lag(adjusted)))

KR_monthly &amp;lt;- KR_monthly %&amp;gt;% 
  rename(date_KR = date,
         adj_KR = adjusted)

SP1500_monthly &amp;lt;- SP1500_monthly %&amp;gt;% 
  rename(date_SP = date,
         adj_SP = adjusted)

both_monthly &amp;lt;- cbind(SP1500_monthly, KR_monthly)

# testing different relationships really for Q&amp;amp;A properties
# both_131 &amp;lt;- both_monthly[-1, ]
both_120 &amp;lt;- both_monthly[-c(1:12), ]
# both_108 &amp;lt;- both_monthly[-c(1:24), ]
# both_96 &amp;lt;- both_monthly[-c(1:36), ]
# both_84 &amp;lt;- both_monthly[-c(1:48), ]
# both_72 &amp;lt;- both_monthly[-c(1:60), ]

both_120 &amp;lt;- both_120 %&amp;gt;% rename(SP_1500 = r_m_SP)
saveRDS(both_120, &amp;quot;t2-20-17-kroger-sp1500.rds&amp;quot;)

con &amp;lt;- url(&amp;quot;http://frm-bionicturtle.s3.amazonaws.com/david/t2-20-17-kroger-sp1500.rds&amp;quot;)
both_120 &amp;lt;- readRDS(con)
close(con)

both_120 %&amp;gt;% ggplot(aes(x = SP_1500, y = r_m_KR)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-bt-question-set-p1-t2-20-17-univariate-regressions-continued-2nd-set-v2.en_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_120 &amp;lt;- lm(r_m_KR ~ SP_1500, data = both_120)
summary(model_120)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = r_m_KR ~ SP_1500, data = both_120)
## 
## Residuals:
##       Min        1Q    Median        3Q       Max 
## -0.255113 -0.039050  0.009397  0.043573  0.203206 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.003594   0.006433   0.559    0.577    
## SP_1500     0.696484   0.169073   4.119 7.08e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.06775 on 118 degrees of freedom
## Multiple R-squared:  0.1257, Adjusted R-squared:  0.1183 
## F-statistic: 16.97 on 1 and 118 DF,  p-value: 7.082e-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;###

model_120_tidy &amp;lt;- tidy(model_120)

gt_table_model_120 &amp;lt;- gt(model_120_tidy)

gt_table_model_120 &amp;lt;- 
  gt_table_model_120 %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Kroger (KR) versus S&amp;amp;P_1500: Gross (incl. Rf) monthly log return&amp;quot;,
    subtitle = md(&amp;quot;Ten years (2010 - 2019), n = 120 months&amp;quot;)
  ) %&amp;gt;% 
  tab_source_note(
    source_note = &amp;quot;Source: tidyquant https://cran.r-project.org/web/packages/tidyquant/&amp;quot;
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic),
    decimals = 4
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% 
  tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )

gt_table_model_120&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#izrtqykfua .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#izrtqykfua .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#izrtqykfua .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#izrtqykfua .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#izrtqykfua .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#izrtqykfua .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#izrtqykfua .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#izrtqykfua .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#izrtqykfua .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#izrtqykfua .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#izrtqykfua .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#izrtqykfua .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#izrtqykfua .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#izrtqykfua .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#izrtqykfua .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#izrtqykfua .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#izrtqykfua .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#izrtqykfua .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#izrtqykfua .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#izrtqykfua .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#izrtqykfua .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#izrtqykfua .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#izrtqykfua .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#izrtqykfua .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#izrtqykfua .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#izrtqykfua .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#izrtqykfua .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#izrtqykfua .gt_left {
  text-align: left;
}

#izrtqykfua .gt_center {
  text-align: center;
}

#izrtqykfua .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#izrtqykfua .gt_font_normal {
  font-weight: normal;
}

#izrtqykfua .gt_font_bold {
  font-weight: bold;
}

#izrtqykfua .gt_font_italic {
  font-style: italic;
}

#izrtqykfua .gt_super {
  font-size: 65%;
}

#izrtqykfua .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;izrtqykfua&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Kroger (KR) versus S&amp;amp;P_1500: Gross (incl. Rf) monthly log return&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Ten years (2010 - 2019), n = 120 months&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0036&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0064&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.5587&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;5.77 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;1&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SP_1500&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.6965&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.1691&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.1194&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.08 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;5&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Source: tidyquant https://cran.r-project.org/web/packages/tidyquant/&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;third-question&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Third question&lt;/h3&gt;
&lt;p&gt;BT 20.17.3. Debra is an economist who is interested in the relationship between consumer spending and the gross domestic product (GDP). From the FRED database at the Fed’s Bank of St. Louis (&lt;a href=&#34;https://fred.stlouisfed.org/&#34; class=&#34;uri&#34;&gt;https://fred.stlouisfed.org/&lt;/a&gt;) she collects quarterly data from 1980 through the first quarter of 2020; her series includes n = 161 quarters of data. She regresses consumer spending (C_SPEND), as the response (aka, dependent) variable against GDP as the explanatory (aka, independent) variable. Each series is not a level, but rather a seasonally adjusted percent change. The regression results are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(alfred)
library(ggplot2)


# startdate &amp;lt;- &amp;quot;1980-01-01&amp;quot;
# enddate &amp;lt;- &amp;quot;2020-01-01&amp;quot;
# startdate1 &amp;lt;- &amp;quot;1980-01-01&amp;quot;
# enddate1 &amp;lt;- &amp;quot;2020-01-01&amp;quot;

# gdp &amp;lt;- get_fred_series(&amp;quot;A191RP1Q027SBEA&amp;quot;, &amp;quot;GDP&amp;quot;, observation_start = startdate1, observation_end = enddate1)
# cspend &amp;lt;- get_fred_series(&amp;quot;DPCERL1Q225SBEA&amp;quot;, &amp;quot;C_Spend&amp;quot;, observation_start = startdate1, observation_end = enddate1)
# testing
# cdebt &amp;lt;- get_fred_series(&amp;quot;CDSP&amp;quot;, &amp;quot;C_Debt&amp;quot;, observation_start = startdate1, observation_end = enddate1)
# df1 &amp;lt;- cbind(gdp, cdebt)
# df1 &amp;lt;- df1[-3]

# df2 &amp;lt;- cbind(gdp, cspend)
# df2 &amp;lt;- df2[-3]
# df2 &amp;lt;- df2 %&amp;gt;% rename(C_SPEND = C_Spend)
# saving dataframe because series data changed in the meantime!
# saveRDS(df2, &amp;quot;t2-20-17-spend-versus-gdp.rds&amp;quot;)

con &amp;lt;- url(&amp;quot;http://frm-bionicturtle.s3.amazonaws.com/david/t2-20-17-spend-versus-gdp.rds&amp;quot;)
df2 &amp;lt;- readRDS(con)
close(con)

ggplot(df2, aes(GDP, C_SPEND)) + 
  geom_point() + 
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-09-03-bt-question-set-p1-t2-20-17-univariate-regressions-continued-2nd-set-v2.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_spend &amp;lt;- lm(C_SPEND ~ GDP, data = df2)
summary(model_spend)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = C_SPEND ~ GDP, data = df2)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -10.0025  -1.1513   0.2266   1.2048   4.6900 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  0.89995    0.31555   2.852  0.00492 ** 
## GDP          0.36591    0.04993   7.329 1.11e-11 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2.155 on 159 degrees of freedom
## Multiple R-squared:  0.2525, Adjusted R-squared:  0.2478 
## F-statistic: 53.71 on 1 and 159 DF,  p-value: 1.107e-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_fit_tidy &amp;lt;- tidy(model_spend)

sd(df2$GDP)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.411722&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(df2$C_SPEND)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.484429&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(df2$GDP, df2$C_SPEND)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.5024882&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beta &amp;lt;- df_fit_tidy$estimate[2]
beta_r &amp;lt;- round(beta,4)
sd_gdp &amp;lt;- round(sd(df2$GDP),3)
sd_spend &amp;lt;- round(sd(df2$C_SPEND),3)
correlation_compute &amp;lt;- beta_r * sd_gdp/sd_spend

gt_table &amp;lt;- gt(df_fit_tidy)

gt_table &amp;lt;- 
  gt_table %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Consumer Spending (C_SPEND) regressed against Gross Domestic Product (GDP)&amp;quot;,
    subtitle = md(&amp;quot;Quarterly Growth (Seasonally adjusted), 1980 to 2020:Q1, n = 161&amp;quot;)
  ) %&amp;gt;% 
  tab_source_note(
    source_note = md(&amp;quot;Source: FRED at https://fred.stlouisfed.org/&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic),
    decimals = 4
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% 
  tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )

gt_table&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#rslkcytkdt .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#rslkcytkdt .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rslkcytkdt .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#rslkcytkdt .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#rslkcytkdt .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rslkcytkdt .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#rslkcytkdt .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#rslkcytkdt .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#rslkcytkdt .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#rslkcytkdt .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#rslkcytkdt .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#rslkcytkdt .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#rslkcytkdt .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#rslkcytkdt .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#rslkcytkdt .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#rslkcytkdt .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#rslkcytkdt .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#rslkcytkdt .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rslkcytkdt .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#rslkcytkdt .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#rslkcytkdt .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#rslkcytkdt .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#rslkcytkdt .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#rslkcytkdt .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rslkcytkdt .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#rslkcytkdt .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#rslkcytkdt .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#rslkcytkdt .gt_left {
  text-align: left;
}

#rslkcytkdt .gt_center {
  text-align: center;
}

#rslkcytkdt .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#rslkcytkdt .gt_font_normal {
  font-weight: normal;
}

#rslkcytkdt .gt_font_bold {
  font-weight: bold;
}

#rslkcytkdt .gt_font_italic {
  font-style: italic;
}

#rslkcytkdt .gt_super {
  font-size: 65%;
}

#rslkcytkdt .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;rslkcytkdt&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Consumer Spending (C_SPEND) regressed against Gross Domestic Product (GDP)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Quarterly Growth (Seasonally adjusted), 1980 to 2020:Q1, n = 161&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.9000&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.3156&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.8520&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;4.92 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;3&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;GDP&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.3659&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0499&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;7.3285&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.11 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;11&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Source: FRED at https://fred.stlouisfed.org/&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_fit_tidy$p.value[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.106954e-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y_intercept &amp;lt;- df_fit_tidy$estimate[1]
se_y_intercept &amp;lt;- df_fit_tidy$std.error[1]
ci_confidence = 0.95
z_2s &amp;lt;- qnorm((1 + ci_confidence)/2)

ci_lower &amp;lt;- y_intercept - se_y_intercept*z_2s
ci_upper &amp;lt;- y_intercept + se_y_intercept*z_2s
ci_lower&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.2814779&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ci_upper&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.518425&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slope_c &amp;lt;-df_fit_tidy$estimate[2]
se_slope &amp;lt;- df_fit_tidy$std.error[2]
slope_ci_lower &amp;lt;- slope_c - se_slope * z_2s
slope_ci_upper &amp;lt;- slope_c + se_slope * z_2s
slope_ci_lower&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.2680529&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slope_ci_upper&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.463775&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question P1-T2-20-16-3: Univariate regression: Monthly rental versus footage</title>
      <link>/post/2020/bt-question-p1-t2-20-16-3-univariate-regression-monthly-rental-versus-footage/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-p1-t2-20-16-3-univariate-regression-monthly-rental-versus-footage/</guid>
      <description>


&lt;p&gt;20.16.3. Sally works at a real estate firm and was asked by her client to quantify the relationship between rental size (in square feet) and rental price. She explained to her client that the relationship is multivariate but, given that caveat, she offered to perform a linear regression with a single explanatory variable. She retrieved a massive dataset (n = 360,400 observations and includes rentals across the United States) and regressed monthly rental price (aka, the explained variable) against rental size as measured by square feet. To illustrate the units, one of data points in the dataset is (y = $1,200 per month, X = 1,000 feet^2). The results are displayed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.1
## v tidyr   1.1.1     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;gt&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(broom)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;broom&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# rentals_raw &amp;lt;- read_csv(&amp;quot;housing.csv&amp;quot;)
# rentals_sort &amp;lt;- rentals %&amp;gt;% arrange(price)
# rentals_df1 &amp;lt;- rentals_raw %&amp;gt;% filter(price &amp;gt; 500, price &amp;lt; 10000, 
#                                       sqfeet&amp;gt; 500, sqfeet &amp;lt; 10000)
# boxplot(rentals$price)
# boxplot(rentals$price)$out
# 
# rentals_df1 &amp;lt;- rentals_df1 %&amp;gt;% rename(
#  &amp;quot;Price&amp;quot; = &amp;quot;price&amp;quot;,
#  &amp;quot;SquareFeet&amp;quot; = &amp;quot;sqfeet&amp;quot;)
# 
# saveRDS(rentals_df1, &amp;quot;rentals-sm.rds&amp;quot;)

con &amp;lt;- url(&amp;quot;http://frm-bionicturtle.s3.amazonaws.com/david/rentals-sm.rds&amp;quot;)
rentals_df1 &amp;lt;- readRDS(con)
close(con)

model1 &amp;lt;- rentals_df1 %&amp;gt;% lm(Price ~ SquareFeet, data =  .)
summary(model1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Price ~ SquareFeet, data = .)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -5382.8  -325.1  -122.7   185.9  8262.4 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 624.42303    2.59775   240.4   &amp;lt;2e-16 ***
## SquareFeet    0.57889    0.00239   242.2   &amp;lt;2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 545.4 on 360399 degrees of freedom
## Multiple R-squared:   0.14,  Adjusted R-squared:   0.14 
## F-statistic: 5.866e+04 on 1 and 360399 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;price_avg_act &amp;lt;- mean(rentals_df1$Price)
size_ave_act &amp;lt;- mean(rentals_df1$SquareFeet)

new.df.rentals &amp;lt;- data.frame(SquareFeet = c(1000, 1500, 1800, 2000, 2500))
predict(model1, new.df.rentals)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        1        2        3        4        5 
## 1203.313 1492.758 1666.425 1782.203 2071.648&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model1_tidy &amp;lt;- tidy(model1)

gt_table_rentals &amp;lt;- gt(model1_tidy)

gt_table_rentals &amp;lt;- 
  gt_table_rentals %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Monthly Rental PRICE regressed against Square Feet&amp;quot;,
    subtitle = md(&amp;quot;Entire United States, n = 360,400 observations&amp;quot;)
  ) %&amp;gt;% 
  tab_source_note(
    source_note = &amp;quot;Source: USA Housing Listings @ kaggle https://www.kaggle.com/datasets&amp;quot;
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% 
  tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  )
  
gt_table_rentals&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#mocfqyavln .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#mocfqyavln .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mocfqyavln .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#mocfqyavln .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#mocfqyavln .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mocfqyavln .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#mocfqyavln .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#mocfqyavln .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#mocfqyavln .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#mocfqyavln .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#mocfqyavln .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#mocfqyavln .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#mocfqyavln .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#mocfqyavln .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#mocfqyavln .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#mocfqyavln .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#mocfqyavln .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#mocfqyavln .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mocfqyavln .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#mocfqyavln .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#mocfqyavln .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#mocfqyavln .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#mocfqyavln .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#mocfqyavln .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mocfqyavln .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#mocfqyavln .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#mocfqyavln .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#mocfqyavln .gt_left {
  text-align: left;
}

#mocfqyavln .gt_center {
  text-align: center;
}

#mocfqyavln .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#mocfqyavln .gt_font_normal {
  font-weight: normal;
}

#mocfqyavln .gt_font_bold {
  font-weight: bold;
}

#mocfqyavln .gt_font_italic {
  font-style: italic;
}

#mocfqyavln .gt_super {
  font-size: 65%;
}

#mocfqyavln .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;mocfqyavln&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Monthly Rental PRICE regressed against Square Feet&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Entire United States, n = 360,400 observations&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;624.423&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.598&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;240.370&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;SquareFeet&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.579&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.002&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;242.206&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.00&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Source: USA Housing Listings @ kaggle https://www.kaggle.com/datasets&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rentals_df1 %&amp;gt;% ggplot(aes(SquareFeet, Price)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-3-univariate-regression-monthly-rental-versus-footage.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BT Question P1-T2-20-16-2: Univariate regression: Portfolio versus benchmark returns</title>
      <link>/post/2020/bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns/</guid>
      <description>


&lt;p&gt;20.16.2. Peter is an analyst who is evaluating an investment fund whose managers claim has outperformed their benchmark. He collected monthly returns for the last five years; i.e., the sample size is excess return pairs over n = 60 months. He plots excess returns, which are defined as the returns in excess of the riskfree rate; ie., an excess return equals the gross return minus the riskfree rate. The scatterplot is displayed below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;scatterplot&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The correlation coefficient is 0.708. In regard to the univariate data, the standard deviation of the portfolio’s returns is 22.84% and the standard deviation of the benchmark’s returns is 9.79%. The average excess return of the benchmark was -0.37% and the average excess return of the portfolio was 2.61%. Each of the following statements is true EXCEPT which is false?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(scales)
library(ggthemes)
# library(lmtest)

x_mu &amp;lt;- .01; x_sig &amp;lt;- .1

y_mu &amp;lt;- .03; y_sig &amp;lt;- .2

rho &amp;lt;-  0.72
months &amp;lt;- 60

#set.seed(59)
set.seed(158)

# 60  rows of random standard normals
returns &amp;lt;- tibble(index = 1:months)
returns$x1 &amp;lt;- rnorm(months) 
returns$y1 &amp;lt;- rnorm(months)

# make y2 correlated with y1; adjust location/scale
returns1 &amp;lt;- returns %&amp;gt;% mutate(
  y2 = rho*x1 + sqrt(1 - rho^2)*y1,
  r_x = x_mu + x1 * x_sig,
  r_y = y_mu + y2 * y_sig
)

x_sd &amp;lt;- sd(returns1$r_x)
y_sd &amp;lt;- sd(returns1$r_y)
rho_xy &amp;lt;- cor(returns1$r_x, returns1$r_y)
beta_yx &amp;lt;- rho_xy * y_sd / x_sd
x_mu_act &amp;lt;- mean(returns1$r_x)
y_mu_act &amp;lt;- mean(returns1$r_y)

sprintf(&amp;quot;sample rho is %.4f. The standard deviation of Portfolio returns is &amp;quot;, rho_xy)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;sample rho is 0.7078. The standard deviation of Portfolio returns is &amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;paste(&amp;quot;Portfolio standard deviation is&amp;quot;, percent(y_sd, accuracy = .01))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Portfolio standard deviation is 22.84%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;paste(&amp;quot;Benchmark standard deviation is&amp;quot;, percent(x_sd, accuracy = .01))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Benchmark standard deviation is 9.79%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;paste(&amp;quot;Portfolio average excess return is&amp;quot;, percent(y_mu_act, accuracy = .01))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Portfolio average excess return is 2.61%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;paste(&amp;quot;Benchmark average excess return is&amp;quot;, percent(x_mu_act, accuracy = .01))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Benchmark average excess return is -0.37%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sprintf(&amp;quot;Beta(P,B) is %.3f&amp;quot;, beta_yx) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Beta(P,B) is 1.652&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;returns1_lm &amp;lt;- lm(r_y ~ r_x, data = returns1)
summary(returns1_lm)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = r_y ~ r_x, data = returns1)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.30810 -0.11231 -0.01385  0.09922  0.42134 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  0.03231    0.02102   1.537     0.13    
## r_x          1.65219    0.21649   7.632 2.54e-10 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.1627 on 58 degrees of freedom
## Multiple R-squared:  0.501,  Adjusted R-squared:  0.4924 
## F-statistic: 58.24 on 1 and 58 DF,  p-value: 2.543e-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;returns1 %&amp;gt;% ggplot(aes(x = r_x, y = r_y)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE, color = &amp;quot;forestgreen&amp;quot;, linetype = &amp;quot;longdash&amp;quot;, size = 1.5) +
  labs(title = &amp;quot;Investment fund versus benchmark&amp;quot;, 
       subtitle = &amp;quot;Excess returns, n = 60 months&amp;quot;) +
  xlab(&amp;quot;Benchmark&amp;#39;s excess returns&amp;quot;) +
  ylab(&amp;quot;Portfolio&amp;#39;s excess returns&amp;quot;) +
  scale_x_continuous(labels = percent_format(accuracy = 1)) +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  theme_light() +
  theme(
    plot.title = element_text(size = 16),
    plot.subtitle = element_text(size = 16),
    axis.title.y = element_text(size = 14),
    axis.title.x = element_text(size = 14),
    axis.text.x = element_text(size = 14, margin = margin(b = 10)),
    axis.text.y = element_text(size = 14, margin = margin(l = 10))
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(returns1_lm)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns.en_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns.en_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns.en_files/figure-html/unnamed-chunk-1-4.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2020-08-28-bt-question-p1-t2-20-16-2-univariate-regression-portfolio-versus-benchmark-returns.en_files/figure-html/unnamed-chunk-1-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;new.df &amp;lt;- data.frame(r_x = c(x_mu_act, 0, seq(from = 0.01, to = 0.1, by = .01)))
new.df$predicted_y &amp;lt;- predict(returns1_lm, new.df)
new.df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             r_x predicted_y
## 1  -0.003740684  0.02613168
## 2   0.000000000  0.03231199
## 3   0.010000000  0.04883388
## 4   0.020000000  0.06535577
## 5   0.030000000  0.08187766
## 6   0.040000000  0.09839955
## 7   0.050000000  0.11492143
## 8   0.060000000  0.13144332
## 9   0.070000000  0.14796521
## 10  0.080000000  0.16448710
## 11  0.090000000  0.18100899
## 12  0.100000000  0.19753088&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;intercept_predict &amp;lt;- (0 - x_mu_act)*beta_yx + y_mu_act
intercept_predict_round &amp;lt;- (0 - round(x_mu_act,4))*beta_yx + round(y_mu_act,4)
intercept_predict&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.03231199&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;intercept_predict_round&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0322131&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>BT Question P1-T2-20-16-1: Univariate regression: Inflation versus unemployment (using gt package to display table)</title>
      <link>/post/2020/bt-question-p1-t2-20-16-1-univariate-regression-inflation-versus-unemployment-using-gt-package-to-display-table/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-p1-t2-20-16-1-univariate-regression-inflation-versus-unemployment-using-gt-package-to-display-table/</guid>
      <description>


&lt;div id=&#34;background&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;BT is known for our tough training-style practice questions, but I wanted to take it further and add more realism. I’ve been writing a fresh question sets on the regression topics; I’m always writing new questions! It takes more time, but in these regression sets I’ve been pulling actual datasets. For this question, I pulled inflation and unemployment rates from the FRED database (see below). In combination with actual &lt;em&gt;code-based applications&lt;/em&gt;, these new question sets are much more &lt;strong&gt;realistic&lt;/strong&gt; than typical exam-prep fare. Let’s face it: in the real world, quantitative tasks (e.g., regression) are performed in software, not with calculators. In a way, it’s our responsibility to help candidates get exposure to tools that are actually useful. We’ve always been the only FRM exam prep provider (EPP) who develops virtually the entire, broad array of quantitative risk (FRM) topics in spreadsheet workbooks (this is a massive construction of hundreds of spreadsheets that has taken me the better part of a decade to build). Now I’ve started to develop associated code-based applications for the ultimate in &lt;em&gt;realistic&lt;/em&gt; study material.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;using-the-gt-package-to-render-the-regression-output-table&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Using the gt package to render the regression output table&lt;/h2&gt;
&lt;p&gt;I thought I’d try the &lt;a href=&#34;https://github.com/rstudio/gt&#34;&gt;gt package&lt;/a&gt; to see if I could improve the presentation of the regression output table. It’s fairly intuitive but a little unexpected because you pipe (“%&amp;gt;%”) additional format features.&lt;/p&gt;
&lt;p&gt;This question (my first in the new regression set) reads as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“20.16.1. Debra is an analyst at a governmental agency. Her boss asked her to investigate whether the Phillips curve applies during high-inflation regimes. To answer the question, Debra collected data from the FRED database at the St. Louis Fed (&lt;a href=&#34;https://fred.stlouisfed.org/&#34; class=&#34;uri&#34;&gt;https://fred.stlouisfed.org/&lt;/a&gt;). The Phillips curve describes an inverse relationship between unemployment rates and inflation rates; &lt;a href=&#34;https://en.wikipedia.org/wiki/Phillips_curve&#34; class=&#34;uri&#34;&gt;https://en.wikipedia.org/wiki/Phillips_curve&lt;/a&gt;. Debra collected monthly data and she regressed the inflation rate against the unemployment rate (conditional on high-inflation regimes). Her independent variable is unemployment rate (FRED code: UNRATE) and here dependent variable is the Inflation rate (CPIAUCSL). The units are percentages not decimals; e.g., the dataset includes the month of January in 1982 when the unemployment rate was 8.9 and the inflation rate was 6.38. Her regression results are presented below.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We load the packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(gt) # library(reactable) is another table package I haven&amp;#39;t used
library(alfred) # Direct access to FRED
library(broom)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then see if we might find a super-simple (ie, linear) Phillips curve
(BT Question P1.T2.20.16.1)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;startdate &amp;lt;- &amp;quot;1980-01-01&amp;quot;
enddate &amp;lt;- &amp;quot;2020-01-01&amp;quot;

# Phillips x = unemployment
unrate &amp;lt;- get_fred_series(&amp;quot;UNRATE&amp;quot;, &amp;quot;Unemployment&amp;quot;, observation_start = startdate, observation_end = enddate)
inflation &amp;lt;- get_fred_series(&amp;quot;CPIAUCSL&amp;quot;, &amp;quot;inflation&amp;quot;, observation_start = startdate, observation_end = enddate)
inflation_rate &amp;lt;- get_fred_series(&amp;quot;PCETRIM12M159SFRBDAL&amp;quot;, &amp;quot;Inflation_Rate&amp;quot;, observation_start = startdate, observation_end = enddate)
df1 &amp;lt;- cbind(inflation, unrate, inflation_rate)
df1 &amp;lt;- df1[ , c(1,2, 4, 6)]
df2 &amp;lt;- df1 %&amp;gt;% filter(Inflation_Rate &amp;gt; 4.3)
df_fit &amp;lt;- lm(Inflation_Rate ~ Unemployment, data = df2)
summary(df_fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Inflation_Rate ~ Unemployment, data = df2)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -1.27252 -0.22807 -0.02961  0.25143  0.83596 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  16.38811    0.47300   34.65   &amp;lt;2e-16 ***
## Unemployment -1.10565    0.05572  -19.84   &amp;lt;2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.4726 on 38 degrees of freedom
## Multiple R-squared:  0.912,  Adjusted R-squared:  0.9097 
## F-statistic: 393.8 on 1 and 38 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_fit_tidy &amp;lt;- tidy(df_fit)
gt_table &amp;lt;- gt(df_fit_tidy)

# This is the standard gt table which is an improvement
gt_table&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#zunxtbvjrr .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zunxtbvjrr .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zunxtbvjrr .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zunxtbvjrr .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zunxtbvjrr .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zunxtbvjrr .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zunxtbvjrr .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zunxtbvjrr .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zunxtbvjrr .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zunxtbvjrr .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zunxtbvjrr .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zunxtbvjrr .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#zunxtbvjrr .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zunxtbvjrr .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#zunxtbvjrr .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#zunxtbvjrr .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zunxtbvjrr .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#zunxtbvjrr .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zunxtbvjrr .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#zunxtbvjrr .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zunxtbvjrr .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zunxtbvjrr .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zunxtbvjrr .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zunxtbvjrr .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zunxtbvjrr .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#zunxtbvjrr .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zunxtbvjrr .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#zunxtbvjrr .gt_left {
  text-align: left;
}

#zunxtbvjrr .gt_center {
  text-align: center;
}

#zunxtbvjrr .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zunxtbvjrr .gt_font_normal {
  font-weight: normal;
}

#zunxtbvjrr .gt_font_bold {
  font-weight: bold;
}

#zunxtbvjrr .gt_font_italic {
  font-style: italic;
}

#zunxtbvjrr .gt_super {
  font-size: 65%;
}

#zunxtbvjrr .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;zunxtbvjrr&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;term&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;std.error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;statistic&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p.value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;16.38811&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;0.47300171&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;34.64705&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;2.328227e-30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Unemployment&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;-1.10565&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;0.05571874&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;-19.84342&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34;&gt;1.186893e-21&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# But here we&amp;#39;ll utilize the pipe to specifically style the table
gt_table &amp;lt;- 
  gt_table %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% 
  tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% 
  tab_header(
    title = &amp;quot;Inflation Rate (CPIAUCSL) regressed against Unemployment Rate (UNRATE)&amp;quot;,
    subtitle = md(&amp;quot;1980 to 2020 Monthly but conditioned on high inflation regimes&amp;quot;)
  ) %&amp;gt;% 
  tab_source_note(
    source_note = md(&amp;quot;Source: FRED at https://fred.stlouisfed.org/&amp;quot;)
  ) %&amp;gt;% cols_label(
    term = &amp;quot;Coefficient&amp;quot;,
    estimate = &amp;quot;Estimate&amp;quot;,
    std.error = &amp;quot;Std Error&amp;quot;,
    statistic = &amp;quot;t-stat&amp;quot;,
    p.value = &amp;quot;p value&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(estimate, std.error, statistic),
    decimals = 3
  ) %&amp;gt;% fmt_scientific(
    columns = vars(p.value),
  ) %&amp;gt;% 
  tab_options(
    heading.title.font.size = 14,
    heading.subtitle.font.size = 12
  ) %&amp;gt;% 
  tab_footnote(
    footnote = &amp;quot;Filtered on months with inflation &amp;gt;4.3% deliberately to generate regression results&amp;quot;,
    locations = cells_title(&amp;quot;subtitle&amp;quot;)
  )

gt_table&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ynfozqgpox .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ynfozqgpox .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ynfozqgpox .gt_title {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ynfozqgpox .gt_subtitle {
  color: #333333;
  font-size: 12px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ynfozqgpox .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ynfozqgpox .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ynfozqgpox .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ynfozqgpox .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ynfozqgpox .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ynfozqgpox .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ynfozqgpox .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ynfozqgpox .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ynfozqgpox .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ynfozqgpox .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ynfozqgpox .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ynfozqgpox .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ynfozqgpox .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ynfozqgpox .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ynfozqgpox .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ynfozqgpox .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ynfozqgpox .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ynfozqgpox .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ynfozqgpox .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ynfozqgpox .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ynfozqgpox .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ynfozqgpox .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ynfozqgpox .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ynfozqgpox .gt_left {
  text-align: left;
}

#ynfozqgpox .gt_center {
  text-align: center;
}

#ynfozqgpox .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ynfozqgpox .gt_font_normal {
  font-weight: normal;
}

#ynfozqgpox .gt_font_bold {
  font-weight: bold;
}

#ynfozqgpox .gt_font_italic {
  font-style: italic;
}

#ynfozqgpox .gt_super {
  font-size: 65%;
}

#ynfozqgpox .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;ynfozqgpox&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Inflation Rate (CPIAUCSL) regressed against Unemployment Rate (UNRATE)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;5&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;1980 to 2020 Monthly but conditioned on high inflation regimes&lt;sup class=&#34;gt_footnote_marks&#34;&gt;1&lt;/sup&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Estimate&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Std Error&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t-stat&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;16.388&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.473&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;34.647&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.33 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;30&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;Unemployment&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;1.106&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.056&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;&amp;minus;19.843&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;1.19 &amp;times; 10&lt;sup class=&#39;gt_super&#39;&gt;&amp;minus;21&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;5&#34;&gt;Source: FRED at https://fred.stlouisfed.org/&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tfoot&gt;
    &lt;tr class=&#34;gt_footnotes&#34;&gt;
      &lt;td colspan=&#34;5&#34;&gt;
        &lt;p class=&#34;gt_footnote&#34;&gt;
          &lt;sup class=&#34;gt_footnote_marks&#34;&gt;
            &lt;em&gt;1&lt;/em&gt;
          &lt;/sup&gt;
           
          Filtered on months with inflation &amp;gt;4.3% deliberately to generate regression results
          &lt;br /&gt;
        &lt;/p&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;The question does not utilize a scatterplot but here it is anyway&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 %&amp;gt;% ggplot(aes(Unemployment, Inflation_Rate)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-08-25-bt-question-p1-t2-20-16-1-univariate-regression-inflation-versus-unemployment-using-gt-package-to-display-table.en_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
