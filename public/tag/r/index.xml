<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | David&#39;s (bionicturtle) data blog</title>
    <link>/tag/r/</link>
      <atom:link href="/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 21 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu77a30fa54a1153d827111821c0262bf2_25270_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/tag/r/</link>
    </image>
    
    <item>
      <title>BT Question Set P1-T2-20-24-3: AIC and BIC</title>
      <link>/post/2020/bt-question-set-p1-t2-20-24-3-aic-and-bic/</link>
      <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-24-3-aic-and-bic/</guid>
      <description>


&lt;p&gt;20.24.3. Eric is a commodity analyst who fit four different candidate AR(p) models to a series of oil prices. For each of the candidate models, he then retrieved the Akaike information criterion (AIC) and the Bayesian information criterion (BIC). The results are displayed below.&lt;/p&gt;
&lt;p&gt;.. AIC and BIC values (table below) goes here …&lt;/p&gt;
&lt;p&gt;As Eric interprets the results of these criteria (i.e., the AIC and BIC values), which of the following statements is TRUE?&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Both criteria (AIC and BIC) favor the AR(1) model&lt;/li&gt;
&lt;li&gt;Both criteria (AIC and BIC) favor the AR(2) model&lt;/li&gt;
&lt;li&gt;As both criteria are insignificant, any AR(p) model is a bad fit&lt;/li&gt;
&lt;li&gt;The criteria disagree and therefore the AIC’s preference should prevail because it prefers fewer lags&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(scales)
library(gridExtra)
library(forecast)
library(tseries)
library(fpp2)
library(gt)
library(astsa)

# 175
set.seed(175)
ar2 &amp;lt;- arima.sim(model=list(order=c(2,0,0),ar = c(1.5,-.75)),n = 500)
ma2 &amp;lt;- arima.sim(model=list(order=c(0,0,2),ma = c(1.5,-.75)),n = 500)

ar1_fit &amp;lt;- sarima(ar2, p = 1, d = 0, q = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 1.185288 
## iter   2 value 0.473121
## iter   3 value 0.473113
## iter   4 value 0.473112
## iter   5 value 0.473108
## iter   6 value 0.473099
## iter   7 value 0.473095
## iter   8 value 0.473094
## iter   9 value 0.473092
## iter  10 value 0.473087
## iter  11 value 0.473080
## iter  12 value 0.473076
## iter  13 value 0.473075
## iter  14 value 0.473075
## iter  15 value 0.473075
## iter  16 value 0.473074
## iter  17 value 0.473073
## iter  18 value 0.473073
## iter  19 value 0.473073
## iter  20 value 0.473073
## iter  21 value 0.473072
## iter  22 value 0.473072
## iter  23 value 0.473072
## iter  24 value 0.473072
## iter  25 value 0.473072
## iter  26 value 0.473072
## iter  27 value 0.473072
## iter  27 value 0.473072
## iter  27 value 0.473072
## final  value 0.473072 
## converged
## initial  value 0.475632 
## iter   2 value 0.475627
## iter   3 value 0.475615
## iter   4 value 0.475613
## iter   5 value 0.475597
## iter   6 value 0.475583
## iter   7 value 0.475579
## iter   8 value 0.475574
## iter   9 value 0.475573
## iter  10 value 0.475570
## iter  11 value 0.475569
## iter  12 value 0.475569
## iter  13 value 0.475569
## iter  13 value 0.475569
## iter  13 value 0.475569
## final  value 0.475569 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar2_fit &amp;lt;- sarima(ar2, p = 2, d = 0, q = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 1.186082 
## iter   2 value 1.063752
## iter   3 value 0.611728
## iter   4 value 0.360300
## iter   5 value 0.180452
## iter   6 value 0.026222
## iter   7 value 0.023222
## iter   8 value 0.022348
## iter   9 value 0.022310
## iter  10 value 0.022284
## iter  11 value 0.022258
## iter  12 value 0.022258
## iter  13 value 0.022258
## iter  14 value 0.022258
## iter  15 value 0.022258
## iter  16 value 0.022258
## iter  17 value 0.022258
## iter  17 value 0.022258
## iter  17 value 0.022258
## final  value 0.022258 
## converged
## initial  value 0.028108 
## iter   2 value 0.028095
## iter   3 value 0.028087
## iter   4 value 0.028086
## iter   5 value 0.028086
## iter   6 value 0.028085
## iter   7 value 0.028085
## iter   8 value 0.028085
## iter   8 value 0.028085
## final  value 0.028085 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar3_fit &amp;lt;- sarima(ar2, p = 3, d = 0, q = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 1.187086 
## iter   2 value 0.966297
## iter   3 value 0.720122
## iter   4 value 0.651535
## iter   5 value 0.270365
## iter   6 value 0.157749
## iter   7 value 0.106223
## iter   8 value 0.068752
## iter   9 value 0.027592
## iter  10 value 0.020453
## iter  11 value 0.020449
## iter  12 value 0.020445
## iter  13 value 0.020430
## iter  14 value 0.020418
## iter  15 value 0.020418
## iter  16 value 0.020418
## iter  17 value 0.020418
## iter  18 value 0.020418
## iter  19 value 0.020418
## iter  20 value 0.020418
## iter  20 value 0.020418
## iter  20 value 0.020418
## final  value 0.020418 
## converged
## initial  value 0.027093 
## iter   2 value 0.027090
## iter   3 value 0.027084
## iter   4 value 0.027079
## iter   5 value 0.027079
## iter   6 value 0.027078
## iter   7 value 0.027078
## iter   8 value 0.027078
## iter   8 value 0.027078
## iter   8 value 0.027078
## final  value 0.027078 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar4_fit &amp;lt;- sarima(ar2, p = 4, d = 0, q = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 1.187677 
## iter   2 value 1.182760
## iter   3 value 0.389837
## iter   4 value 0.312734
## iter   5 value 0.257361
## iter   6 value 0.134886
## iter   7 value 0.042493
## iter   8 value 0.035479
## iter   9 value 0.028843
## iter  10 value 0.020356
## iter  11 value 0.020308
## iter  12 value 0.020305
## iter  13 value 0.020305
## iter  14 value 0.020305
## iter  15 value 0.020304
## iter  16 value 0.020304
## iter  17 value 0.020304
## iter  18 value 0.020304
## iter  19 value 0.020304
## iter  20 value 0.020304
## iter  21 value 0.020304
## iter  22 value 0.020304
## iter  22 value 0.020304
## iter  22 value 0.020304
## final  value 0.020304 
## converged
## initial  value 0.026957 
## iter   2 value 0.026941
## iter   3 value 0.026940
## iter   4 value 0.026938
## iter   5 value 0.026937
## iter   6 value 0.026936
## iter   7 value 0.026936
## iter   8 value 0.026936
## iter   9 value 0.026936
## iter   9 value 0.026936
## iter   9 value 0.026936
## final  value 0.026936 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma1_fit &amp;lt;- sarima(ma2, p = 0, d = 0, q = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 0.620720 
## iter   2 value 0.616967
## iter   3 value 0.616503
## iter   4 value 0.616503
## iter   4 value 0.616503
## iter   4 value 0.616503
## final  value 0.616503 
## converged
## initial  value 0.616515 
## iter   2 value 0.616515
## iter   2 value 0.616515
## iter   2 value 0.616515
## final  value 0.616515 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma2_fit &amp;lt;- sarima(ma2, p = 0, d = 0, q = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 0.620720 
## iter   2 value 0.601563
## iter   3 value 0.601097
## iter   4 value 0.601053
## iter   5 value 0.601053
## iter   5 value 0.601053
## iter   5 value 0.601053
## final  value 0.601053 
## converged
## initial  value 0.601132 
## iter   2 value 0.601132
## iter   2 value 0.601132
## iter   2 value 0.601132
## final  value 0.601132 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma3_fit &amp;lt;- sarima(ma2, p = 0, d = 0, q = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 0.620720 
## iter   2 value 0.601584
## iter   3 value 0.601080
## iter   4 value 0.600978
## iter   5 value 0.600977
## iter   5 value 0.600977
## iter   5 value 0.600977
## final  value 0.600977 
## converged
## initial  value 0.601058 
## iter   2 value 0.601058
## iter   3 value 0.601058
## iter   3 value 0.601058
## iter   3 value 0.601058
## final  value 0.601058 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma4_fit &amp;lt;- sarima(ma2, p = 0, d = 0, q = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value 0.620720 
## iter   2 value 0.599626
## iter   3 value 0.599377
## iter   4 value 0.599342
## iter   5 value 0.599340
## iter   6 value 0.599340
## iter   7 value 0.599340
## iter   7 value 0.599340
## iter   7 value 0.599340
## final  value 0.599340 
## converged
## initial  value 0.599424 
## iter   2 value 0.599424
## iter   3 value 0.599424
## iter   3 value 0.599424
## iter   3 value 0.599424
## final  value 0.599424 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-3-aic-and-bic.en_files/figure-html/unnamed-chunk-1-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(&amp;quot;AIC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;AIC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar1_fit$AIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.801016&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar2_fit$AIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.910047&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar3_fit$AIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.912034&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar4_fit$AIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.915749&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(&amp;quot;BIC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;BIC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar1_fit$BIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.826304&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar2_fit$BIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.943764&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar3_fit$BIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.95418&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ar4_fit$BIC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.966324&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AIC_ar2 &amp;lt;- c(ar1_fit$AIC, ar2_fit$AIC, ar3_fit$AIC, ar4_fit$AIC)
BIC_ar2 &amp;lt;- c(ar1_fit$BIC, ar2_fit$BIC, ar3_fit$BIC, ar4_fit$BIC)
AIC_BIC_ar2 &amp;lt;- cbind(AIC_ar2, BIC_ar2) %&amp;gt;% data.frame()
models &amp;lt;- c(&amp;quot;AR(1)&amp;quot;, &amp;quot;AR(2)&amp;quot;, &amp;quot;AR(3)&amp;quot;, &amp;quot;AR(4)&amp;quot;)
models_AIC_BIC &amp;lt;- cbind(models, AIC_BIC_ar2)

models_AIC_BIC_gt &amp;lt;- gt(models_AIC_BIC)

models_AIC_BIC_gt &amp;lt;- 
  models_AIC_BIC_gt %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  # ) %&amp;gt;% tab_style(
  #  style = cell_text(color = &amp;quot;cadetblue&amp;quot;),
  #  locations = cells_column_labels(
  #    columns = vars(model, &amp;#39;h (lags)&amp;#39;, statistic, &amp;#39;p-value&amp;#39;)
  #  )
  ) %&amp;gt;% tab_header(
    title = md(&amp;quot;**AIC and BIC values**&amp;quot;),
    subtitle = &amp;quot;Four candidate models: AR(1) ... AR(4)&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(AIC_ar2, BIC_ar2),
    decimals = 5
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;AIC = Akaike information criterion&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;BIC = Bayesian information criterion&amp;quot;)
  # ) %&amp;gt;% cols_width(
  #  vars(model) ~ px(70),
  #  vars(statistic, &amp;#39;p-value&amp;#39;) ~ px(90)
  ) %&amp;gt;% cols_label (
    models = md(&amp;quot;**model**&amp;quot;),
    AIC_ar2 = md(&amp;quot;**AIC**&amp;quot;),
    BIC_ar2 = md(&amp;quot;**BIC**&amp;quot;)
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 16,
    heading.subtitle.font.size = 14
  )

models_AIC_BIC_gt&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#lrwmjdgnlm .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#lrwmjdgnlm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lrwmjdgnlm .gt_title {
  color: #333333;
  font-size: 16px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#lrwmjdgnlm .gt_subtitle {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#lrwmjdgnlm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lrwmjdgnlm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#lrwmjdgnlm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#lrwmjdgnlm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#lrwmjdgnlm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#lrwmjdgnlm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#lrwmjdgnlm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#lrwmjdgnlm .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#lrwmjdgnlm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#lrwmjdgnlm .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#lrwmjdgnlm .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#lrwmjdgnlm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#lrwmjdgnlm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#lrwmjdgnlm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lrwmjdgnlm .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#lrwmjdgnlm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#lrwmjdgnlm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#lrwmjdgnlm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#lrwmjdgnlm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#lrwmjdgnlm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lrwmjdgnlm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#lrwmjdgnlm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#lrwmjdgnlm .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#lrwmjdgnlm .gt_left {
  text-align: left;
}

#lrwmjdgnlm .gt_center {
  text-align: center;
}

#lrwmjdgnlm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#lrwmjdgnlm .gt_font_normal {
  font-weight: normal;
}

#lrwmjdgnlm .gt_font_bold {
  font-weight: bold;
}

#lrwmjdgnlm .gt_font_italic {
  font-style: italic;
}

#lrwmjdgnlm .gt_super {
  font-size: 65%;
}

#lrwmjdgnlm .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;lrwmjdgnlm&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;3&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;&lt;strong&gt;AIC and BIC values&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;3&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;Four candidate models: AR(1) ... AR(4)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;strong&gt;model&lt;/strong&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;strong&gt;AIC&lt;/strong&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;strong&gt;BIC&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(1)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.80102&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;3.82630&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(2)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.91005&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.94376&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(3)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.91203&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.95418&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(4)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.91575&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;2.96632&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;3&#34;&gt;AIC = Akaike information criterion&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;3&#34;&gt;BIC = Bayesian information criterion&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-24-2: Box-Pierce</title>
      <link>/post/2020/bt-question-set-p1-t2-20-24-2-box-pierce/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-24-2-box-pierce/</guid>
      <description>


&lt;p&gt;20.24.2. Elizabeth is an economist tasked with modeling quarterly gross domestic product (GDP) in the United States. She starts with the plots displayed below. The raw data is displayed in the upper; she observes this GDP trend is obviously not stationary (why?). She then performs a typical transformation on the raw data: she takes the difference of the natural log of the quarterly GPD values. This plot is displayed in the lower panel. Because LN[GDP(t)] - LN(GDP(t-1)] = LN[GDP(t)/GDP(t-1)], this lower panel plots continuously compounded returns (aka, monthly log returns). First differencing the log returns occasionally renders the non-stationary trend into a stationary process.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(scales)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;scales&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:purrr&amp;#39;:
## 
##     discard&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:readr&amp;#39;:
## 
##     col_factor&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forecast)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;quantmod&amp;#39;:
##   method            from
##   as.zoo.data.frame zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tseries)
library(ggthemes)
library(ggfortify)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 methods overwritten by &amp;#39;ggfortify&amp;#39;:
##   method                 from    
##   autoplot.Arima         forecast
##   autoplot.acf           forecast
##   autoplot.ar            forecast
##   autoplot.bats          forecast
##   autoplot.decomposed.ts forecast
##   autoplot.ets           forecast
##   autoplot.forecast      forecast
##   autoplot.stl           forecast
##   autoplot.ts            forecast
##   fitted.ar              forecast
##   fortify.ts             forecast
##   residuals.ar           forecast&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(fpp2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------------------------------- fpp2 2.4 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v fma       2.4     v expsmooth 2.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------------- fpp2_conflicts --
## x scales::discard() masks purrr::discard()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gt)
library(astsa)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;astsa&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:fma&amp;#39;:
## 
##     chicken, sales&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:fpp2&amp;#39;:
## 
##     oil&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:forecast&amp;#39;:
## 
##     gas&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
# library(gridExtra)

gdp_log &amp;lt;- diff(log(gdp))

# ts.plot(gdp)
# ts.plot(gdp_log)

p1_gdp &amp;lt;- autoplot(gdp, size = 1.3) + labs(
  title = &amp;quot;US GDP, Quarterly (billion) 1947 to 2018&amp;quot;
) + theme_classic() + theme(
  axis.title.x = element_blank(),
  axis.title.y = element_blank(),
  axis.text.x = element_blank(),
  axis.text.y = element_text(size = 11, face = &amp;quot;bold&amp;quot;)
) + scale_y_continuous(labels = dollar_format())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Scale for &amp;#39;y&amp;#39; is already present. Adding another scale for &amp;#39;y&amp;#39;, which will
## replace the existing scale.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p2_gdp_log &amp;lt;- autoplot(gdp_log, size = 1.3) + labs(
  title = bquote(&amp;quot;LN(&amp;quot;~GDP[t]~ &amp;quot;) - LN(&amp;quot;~GDP[t-1]~&amp;quot;)&amp;quot;)
) + theme_classic() + theme(
  axis.title.y = element_blank(),
  axis.text.x = element_text(size = 11, face = &amp;quot;bold&amp;quot;),
  axis.text.y = element_text(size = 11, face = &amp;quot;bold&amp;quot;)
) + scale_y_continuous(labels = label_percent(accuracy = .1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Scale for &amp;#39;y&amp;#39; is already present. Adding another scale for &amp;#39;y&amp;#39;, which will
## replace the existing scale.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;patchwork &amp;lt;- p1_gdp / p2_gdp_log
patchwork + plot_annotation(
  caption = &amp;quot;Source: https://tradingeconomics.com/united-states/gdp (via astsa package)&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-2-box-pierce.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;(on to the Box-Pierce…)&lt;/p&gt;
&lt;p&gt;She then fits an autoregressive, AR(1), and moving average, MA(1), model to the log return series. This gives her three models: the log return series (called “diff_logs”), an AR(1) model, and an MA(1) model. She conducts a Box-Pierce test on each of these models; the test of the AR(1) and MA(1) is a test of the residuals. She selects two lags for the test, h = 10 and h = 20. The results of her Box-Pierce test are displayed below.&lt;/p&gt;
&lt;p&gt;… Box-Pierce gt table (below) here …&lt;/p&gt;
&lt;p&gt;If we assume her desired confidence level is 95.0%, which of the following statements is a TRUE statement with respect to an interpretation of her Box-Pierce test of the three models?&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;None of the residuals are white noise; i.e., neither the transformed log returns nor AR(1) nor MA(1) is a candidate model&lt;/li&gt;
&lt;li&gt;The AR(1) is a candidate because its residuals appear to be approximately white noise&lt;/li&gt;
&lt;li&gt;The MA(a) is a candidate because its residuals appear to be approximately white noise&lt;/li&gt;
&lt;li&gt;All of the residuals are white noise; i.e., all three models are candidates&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;kableExtra&amp;quot;)
# install.packages(&amp;quot;gapminder&amp;quot;)

ar1_gdp_log &amp;lt;- sarima(gdp_log, p = 1, d = 0, q = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value -4.673186 
## iter   2 value -4.742918
## iter   3 value -4.742921
## iter   4 value -4.742923
## iter   5 value -4.742925
## iter   6 value -4.742925
## iter   6 value -4.742925
## final  value -4.742925 
## converged
## initial  value -4.742229 
## iter   2 value -4.742234
## iter   3 value -4.742245
## iter   3 value -4.742245
## iter   3 value -4.742245
## final  value -4.742245 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-2-box-pierce.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma1_gdp_log &amp;lt;- sarima(gdp_log, p = 0, d = 0, q = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value -4.672758 
## iter   2 value -4.716609
## iter   3 value -4.723220
## iter   4 value -4.723481
## iter   5 value -4.723483
## iter   5 value -4.723483
## iter   5 value -4.723483
## final  value -4.723483 
## converged
## initial  value -4.723444 
## iter   1 value -4.723444
## final  value -4.723444 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-2-box-pierce.en_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ma2_gdp_log &amp;lt;- sarima(gdp_log, p = 0, d = 0, q = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initial  value -4.672758 
## iter   2 value -4.749239
## iter   3 value -4.750696
## iter   4 value -4.750723
## iter   5 value -4.750724
## iter   6 value -4.750725
## iter   7 value -4.750725
## iter   7 value -4.750725
## iter   7 value -4.750725
## final  value -4.750725 
## converged
## initial  value -4.751078 
## iter   2 value -4.751080
## iter   3 value -4.751080
## iter   4 value -4.751081
## iter   5 value -4.751081
## iter   5 value -4.751081
## iter   5 value -4.751081
## final  value -4.751081 
## converged&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-10-21-bt-question-set-p1-t2-20-24-2-box-pierce.en_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;h_values &amp;lt;- c(10, 20)

# diff of logs
model = &amp;quot;diff_logs&amp;quot;
results_log_list &amp;lt;- h_values %&amp;gt;% map(~Box.test(gdp_log, lag = .))
log_statistic &amp;lt;- results_log_list %&amp;gt;% map_dbl(&amp;quot;statistic&amp;quot;)
log_p.value &amp;lt;- results_log_list %&amp;gt;% map_dbl(&amp;quot;p.value&amp;quot;)
log_cols &amp;lt;- data.frame(cbind(h_values, log_statistic, log_p.value))
log_all &amp;lt;- cbind(model, log_cols)
log_all &amp;lt;- log_all %&amp;gt;% rename(
  &amp;#39;h (lags)&amp;#39; = h_values,
  statistic = log_statistic,
  &amp;#39;p-value&amp;#39; = log_p.value
)

# AR(1)
model = &amp;quot;AR(1)&amp;quot;
results_ar1_list &amp;lt;- h_values %&amp;gt;% map(~Box.test(ar1_gdp_log$fit$residuals, lag = .))
ar1_statistic &amp;lt;- results_ar1_list %&amp;gt;% map_dbl(&amp;quot;statistic&amp;quot;)
ar1_p.value &amp;lt;- results_ar1_list %&amp;gt;% map_dbl(&amp;quot;p.value&amp;quot;)
ar1_cols &amp;lt;- data.frame(cbind(h_values, ar1_statistic, ar1_p.value))
ar1_all &amp;lt;- cbind(model, ar1_cols)
ar1_all &amp;lt;- ar1_all %&amp;gt;% rename(
  &amp;#39;h (lags)&amp;#39; = h_values,
  statistic = ar1_statistic,
  &amp;#39;p-value&amp;#39; = ar1_p.value
)

# MA(1)
model = &amp;quot;MA(1)&amp;quot;
results_ma1_list &amp;lt;- h_values %&amp;gt;% map(~Box.test(ma1_gdp_log$fit$residuals, lag = .))
ma1_statistic &amp;lt;- results_ma1_list %&amp;gt;% map_dbl(&amp;quot;statistic&amp;quot;)
ma1_p.value &amp;lt;- results_ma1_list %&amp;gt;% map_dbl(&amp;quot;p.value&amp;quot;)
ma1_cols &amp;lt;- data.frame(cbind(h_values, ma1_statistic, ma1_p.value))
ma1_all &amp;lt;- cbind(model, ma1_cols)
ma1_all &amp;lt;- ma1_all %&amp;gt;% rename(
  &amp;#39;h (lags)&amp;#39; = h_values,
  statistic = ma1_statistic,
  &amp;#39;p-value&amp;#39; = ma1_p.value
)

models_all &amp;lt;- rbind(log_all, ar1_all, ma1_all)
models_gt &amp;lt;- gt(models_all)

models_gt &amp;lt;- 
  models_gt %&amp;gt;% 
  tab_options(
    table.font.size = 14
  ) %&amp;gt;% tab_style(
    style = cell_text(weight = &amp;quot;bold&amp;quot;),
    locations = cells_body()
  ) %&amp;gt;% tab_style(
    style = cell_text(color = &amp;quot;cadetblue&amp;quot;),
    locations = cells_column_labels(
      columns = vars(model, &amp;#39;h (lags)&amp;#39;, statistic, &amp;#39;p-value&amp;#39;)
    )
  ) %&amp;gt;% tab_header(
    title = md(&amp;quot;**Box-Pierce test statistics and p-values**&amp;quot;),
    subtitle = &amp;quot;AR(1) and MA(1) at lags of h = 10 and 20&amp;quot;
  ) %&amp;gt;% fmt_number(
    columns = vars(statistic, &amp;#39;p-value&amp;#39;),
    decimals = 4
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;Note: diff_logs = LN[GDP(t)] - LN[GPD(t-1)]&amp;quot;)
  ) %&amp;gt;% tab_source_note(
    source_note = md(&amp;quot;AR(1) and MA(1) are tests of residuals&amp;quot;)
  ) %&amp;gt;% cols_width(
    vars(model, &amp;#39;h (lags)&amp;#39;) ~ px(80),
    vars(statistic, &amp;#39;p-value&amp;#39;) ~ px(90)
  ) %&amp;gt;% cols_label (
    model = md(&amp;quot;**model**&amp;quot;),
    &amp;#39;h (lags)&amp;#39; = md(&amp;quot;**h (lags)**&amp;quot;),
    statistic = md(&amp;quot;**test stat**&amp;quot;),
    &amp;#39;p-value&amp;#39; = md(&amp;quot;**p-value**&amp;quot;)
  ) %&amp;gt;% cols_align(
    align = &amp;quot;center&amp;quot;,
    columns = vars(&amp;#39;h (lags)&amp;#39;)
  ) %&amp;gt;% tab_options(
    heading.title.font.size = 16,
    heading.subtitle.font.size = 14
  )

models_gt&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#cvqxjzfqya .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cvqxjzfqya .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cvqxjzfqya .gt_title {
  color: #333333;
  font-size: 16px;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cvqxjzfqya .gt_subtitle {
  color: #333333;
  font-size: 14px;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cvqxjzfqya .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cvqxjzfqya .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cvqxjzfqya .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cvqxjzfqya .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cvqxjzfqya .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cvqxjzfqya .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cvqxjzfqya .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cvqxjzfqya .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cvqxjzfqya .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cvqxjzfqya .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#cvqxjzfqya .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#cvqxjzfqya .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cvqxjzfqya .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#cvqxjzfqya .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cvqxjzfqya .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#cvqxjzfqya .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cvqxjzfqya .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cvqxjzfqya .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cvqxjzfqya .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cvqxjzfqya .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cvqxjzfqya .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#cvqxjzfqya .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cvqxjzfqya .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#cvqxjzfqya .gt_left {
  text-align: left;
}

#cvqxjzfqya .gt_center {
  text-align: center;
}

#cvqxjzfqya .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cvqxjzfqya .gt_font_normal {
  font-weight: normal;
}

#cvqxjzfqya .gt_font_bold {
  font-weight: bold;
}

#cvqxjzfqya .gt_font_italic {
  font-style: italic;
}

#cvqxjzfqya .gt_super {
  font-size: 65%;
}

#cvqxjzfqya .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;cvqxjzfqya&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34; style=&#34;table-layout: fixed;; width: 0px&#34;&gt;
  &lt;colgroup&gt;
    &lt;col style=&#34;width:80px;&#34;/&gt;
    &lt;col style=&#34;width:80px;&#34;/&gt;
    &lt;col style=&#34;width:90px;&#34;/&gt;
    &lt;col style=&#34;width:90px;&#34;/&gt;
  &lt;/colgroup&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;&lt;strong&gt;Box-Pierce test statistics and p-values&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;4&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;AR(1) and MA(1) at lags of h = 10 and 20&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;color: cadetblue;&#34;&gt;&lt;strong&gt;model&lt;/strong&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;color: cadetblue;&#34;&gt;&lt;strong&gt;h (lags)&lt;/strong&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;color: cadetblue;&#34;&gt;&lt;strong&gt;test stat&lt;/strong&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;color: cadetblue;&#34;&gt;&lt;strong&gt;p-value&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;diff_logs&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;10&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;62.6228&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;diff_logs&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;20&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;80.1439&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(1)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;10&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;15.5465&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.1134&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;AR(1)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;20&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;30.3091&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0650&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;MA(1)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;10&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;24.3689&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0067&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34; style=&#34;font-weight: bold;&#34;&gt;MA(1)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34; style=&#34;font-weight: bold;&#34;&gt;20&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;39.6618&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_right&#34; style=&#34;font-weight: bold;&#34;&gt;0.0055&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Note: diff_logs = LN[GDP(t)] - LN[GPD(t-1)]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;AR(1) and MA(1) are tests of residuals&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BT Question Set P1-T2-20-23 set: ARMA process</title>
      <link>/post/2020/bt-question-set-p1-t2-20-23-set-arma-process/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020/bt-question-set-p1-t2-20-23-set-arma-process/</guid>
      <description>


&lt;p&gt;Learning objectives&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explain mean reversion and calculate a mean-reverting level.&lt;/li&gt;
&lt;li&gt;Define and describe the properties of autoregressive moving average (ARMA) processes.&lt;/li&gt;
&lt;li&gt;Describe the application of AR, MA and ARMA processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s load some packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------------------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.3     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forecast) # incl ggACF()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;quantmod&amp;#39;:
##   method            from
##   as.zoo.data.frame zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(cowplot)
library(patchwork)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;20.23.1. Below are plotted the autocorrelation function (ACF) and partial autocorrelation function (PACF) for a simulated time-series process. Please note that the horizontal dashed blue lines represent the 95.0% confidence interval … Which of the following time-series models is most likely described by these ACF and PACF plots?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(66)

AR_param_1 = 1.4
AR_param_2 = -0.7
AR_intercept = 0
AR_n &amp;lt;- 1000

theme_set(theme_bw())

# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
AR &amp;lt;- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)

p3 &amp;lt;- ggAcf(AR) + 
  geom_segment(size = 3) +
  labs(
    title = &amp;quot;autocorrelation function (ACF)&amp;quot;
  ) + theme(
    plot.title = element_text(size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_blank()
  )
p4 &amp;lt;- ggPacf(AR) + 
  geom_segment(size = 3) +
  labs(
    title = &amp;quot;partial autocorrelation function (PACF)&amp;quot;
  ) + theme(
    plot.title = element_text(size = 12),
    panel.grid = element_blank()
  )

# Please note plot is shrunk to 86% on copy/paste
p3 / p4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-10-16-bt-question-set-p1-t2-20-23-set-arma-process.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;20.23.2. Below are plotted the autocorrelation function (ACF) and partial autocorrelation function (PACF) for a simulated time-series process. Please note that the horizontal dashed blue lines represent the 95.0% confidence interval … Which of the following time-series models is most likely described by these ACF and PACF plots?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(19)

MA_n = 1000
MA_mean = 0
MA_weight_1 = 0.4
MA_weight_2 = 0.6
MA_weight_3 = 0.8

# # Generate an MA(3) with weights MA_weight_1, MA_weight_2, and MA_weight_3
MA &amp;lt;- arima.sim(model=list(order = c(0,0,3), ma = c(MA_weight_1, MA_weight_2, MA_weight_3)), n = MA_n, mean = MA_mean)

p5 &amp;lt;- ggAcf(MA) + 
  geom_segment(size = 3) +
  # geom_hline(yintercept = c(ci2, -ci2), color = &amp;quot;darkblue&amp;quot;, linetype = &amp;quot;dashed&amp;quot;, size = 2 ) +
  labs(
    title = &amp;quot;autocorrelation function (ACF)&amp;quot;
  ) + theme(
    plot.title = element_text(size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_blank()
  )
p6 &amp;lt;- ggPacf(MA) + 
  geom_segment(size = 3) +
  labs(
    title = &amp;quot;partial autocorrelation function (PACF)&amp;quot;
  ) + theme(
    plot.title = element_text(size = 12),
    panel.grid = element_blank()
  )

# Please note plot is shrunk to 86% on copy/paste
p5 / p6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-10-16-bt-question-set-p1-t2-20-23-set-arma-process.en_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;20.23.3. An ARMA(1,1) process evolves according to Y(t) = ẟ + ϕ&lt;em&gt;Y(t-1) + θ&lt;/em&gt;ε(t-1) + ε(t). The plot below contains two 300-step ARMA(1,1) processes that differ only in their coefficients …&lt;/p&gt;
&lt;p&gt;Which of the following statements is TRUE about the two ARMA(1,1) simulations above?&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Both of the ARMA(1,1) processes are likely to exhibit slow decay in both the ACF and PACF&lt;/li&gt;
&lt;li&gt;Both of the ARMA(1,1) processes are likely to cut off sharply at lag 1 in both the ACF and PACF&lt;/li&gt;
&lt;li&gt;The first ARMA(1,1) process (i.e., plotted with a red dashed line) cannot be covariance-stationary&lt;/li&gt;
&lt;li&gt;The unconditional mean of both ARMA(1,1) processes must be zero because all ARMA(1,1) have a long-run mean of zero&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(astsa)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;astsa&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:forecast&amp;#39;:
## 
##     gas&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(9)

ar_11_1 = 0.8
ma_11_1 = 0.6
arma_11_1_mu = 2
sim_n = 300

ar_11_2 = 0.9
ma_11_2 = -0.5
arma_11_2_mu = -3

# ar_22 = c(1.4, -0.6)
# ma_22 = c(0.9, 0.6)

ARMA_11_1 &amp;lt;- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_1, ma = ma_11_1), n = sim_n) + arma_11_1_mu
ARMA_11_2 &amp;lt;- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_2, ma = ma_11_2), n = sim_n) + arma_11_2_mu
# ARMA_22 &amp;lt;- arima.sim(model=list(order = c(2, 0, 2), ar = ar_22, ma = ma_22), n = 200)

# ts.plot(ARMA_11, ARMA_22)

time_arma &amp;lt;- bind_cols(ARMA_11_1, ARMA_11_2) %&amp;gt;% rowid_to_column() %&amp;gt;% 
  rename(y_ARMA_11_1 = ...1, y_ARMA_11_2 = ...2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...1
## * NA -&amp;gt; ...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_set(theme_bw())

colors &amp;lt;- c(&amp;quot;First ARMA(1,1)&amp;quot; = &amp;quot;darkred&amp;quot;, &amp;quot;Second ARMA(1,1)&amp;quot; = &amp;quot;steelblue&amp;quot;)

time_arma %&amp;gt;% ggplot(aes(x = rowid)) + 
  geom_line(aes(y = y_ARMA_11_1, color = &amp;quot;First ARMA(1,1)&amp;quot;), size = 1, linetype = &amp;quot;longdash&amp;quot;) +
  geom_line(aes(y = y_ARMA_11_2, color = &amp;quot;Second ARMA(1,1)&amp;quot;), size = 1) +
  scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) + 
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.x = element_text(size = 12, face = &amp;quot;bold&amp;quot;),
    axis.text.y = element_text(size = 12, face = &amp;quot;bold&amp;quot;),
    legend.position = &amp;quot;right&amp;quot;,
    legend.text = element_text(size = 12)
  ) + labs(
    title = &amp;quot;Two different ARMA(1,1) time-series simulations&amp;quot;,
    color = &amp;quot;Legend&amp;quot;
  ) +
  scale_color_manual(values = colors)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-10-16-bt-question-set-p1-t2-20-23-set-arma-process.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arma_11_1_mulr = arma_11_1_mu/(1 - ar_11_1)
arma_11_2_mulr = arma_11_2_mu/(1 - ar_11_2)

# mu_arma_22 = 10
#ARMA_22 &amp;lt;- arima.sim(model=list(order = c(2, 0, 2), ar = c(0.4, 0.2), ma = c(0.5,0.6)), n = 200, mean = mu_arma_22)
# ts.plot(ARMA_22)
# acf2(ARMA_22)
# mean_arma_22 = mu_arma_22/(1 - 0.4 - 0.2)

acf2(ARMA_11_1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-10-16-bt-question-set-p1-t2-20-23-set-arma-process.en_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##      [,1]  [,2] [,3]  [,4] [,5] [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12] [,13]
## ACF  0.86  0.65 0.50  0.40 0.33 0.29  0.24  0.18  0.11  0.03 -0.05 -0.12 -0.16
## PACF 0.86 -0.39 0.28 -0.11 0.07 0.05 -0.07 -0.06 -0.01 -0.13 -0.06 -0.01 -0.03
##      [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25]
## ACF  -0.17 -0.17 -0.15 -0.12 -0.10 -0.11 -0.13 -0.15 -0.14 -0.08 -0.02  0.03
## PACF  0.01  0.03  0.06  0.00  0.01 -0.08 -0.03 -0.05  0.10  0.06  0.00  0.04
##      [,26] [,27] [,28]
## ACF   0.05  0.07  0.11
## PACF -0.05  0.13  0.07&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;acf2(ARMA_11_2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020/2020-10-16-bt-question-set-p1-t2-20-23-set-arma-process.en_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3] [,4] [,5] [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12] [,13]
## ACF  0.52 0.45 0.46 0.43 0.37 0.35  0.30  0.25  0.20  0.22  0.16  0.09  0.09
## PACF 0.52 0.24 0.24 0.12 0.05 0.04 -0.02 -0.04 -0.05  0.05 -0.04 -0.08  0.00
##      [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25]
## ACF   0.10  0.13  0.08  0.09  0.08  0.07  0.05  0.00 -0.04 -0.04 -0.04 -0.08
## PACF  0.03  0.10 -0.01  0.04 -0.01  0.01 -0.04 -0.09 -0.09 -0.04 -0.01 -0.06
##      [,26] [,27] [,28]
## ACF  -0.09 -0.11 -0.14
## PACF  0.00 -0.01 -0.03&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
