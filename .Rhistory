set.seed(66)
# AR_param_1 = 0.114
AR_param_1 = 0.9
AR_param_2 = 0.319
AR_intercept = 1.765
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = 100, mean = 50)
set.seed(66)
# AR_param_1 = 0.114
AR_param_1 = 0.8
AR_param_2 = 0.15
AR_intercept = 1.765
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = 100, mean = 50)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
set.seed(66)
AR_param_1 = 0.114
AR_param_2 = 0.15
AR_intercept = 1.765
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_intercept, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
set.seed(66)
AR_param_1 = 0.319
AR_param_2 = 0.114
AR_intercept = 1.765
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9]
AR[10]
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[11] <- 5
View(AR_tb)
AR[2, 9]
AR[1, 9]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
cbind(AR_tb, "Past")
?cbind
?rep
cbind(AR_tb, rep("Past",10))
AR_tb <- cbind(AR_tb, rep("Past",10))
View(AR_tb)
?add_row
View(AR_tb)
AR_tb <- cbind(AR_tb, Cat = rep("Past",10))
View(AR_tb)
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
View(AR_tb)
AR_bt %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
View(AR_tb)
set.seed(66)
AR_param_1 = 0.319
AR_param_2 = 0.114
AR_intercept = 1.765
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
View(AR_tb)
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
View(AR_tb)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line()
View(AR_tb)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point()
set.seed(66)
AR_param_1 = 0.5
AR_param_2 = 0.3
AR_intercept = 1.2
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point()
set.seed(11)
AR_param_1 = 0.5
AR_param_2 = 0.3
AR_intercept = 1.2
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point()
set.seed(12)
AR_param_1 = 0.5
AR_param_2 = 0.3
AR_intercept = 1.2
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point()
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat), size =3) +
geom_point()
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat), size = 6) +
geom_point()
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point(size = 4)
set.seed(13)
AR_param_1 = 0.5
AR_param_2 = 0.3
AR_intercept = 1.2
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point(size = 4)
set.seed(13)
AR_param_1 = 0.6
AR_param_2 = 0.2
AR_intercept = 0.7
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point(size = 4)
set.seed(15)
AR_param_1 = 0.6
AR_param_2 = 0.2
AR_intercept = 0.7
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point(size = 4)
set.seed(16)
AR_param_1 = 0.6
AR_param_2 = 0.2
AR_intercept = 0.7
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_point(size = 4)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
xlim(0,13)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
xlim(1,12)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
xlim(0.5,12.5)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
xlim(0, 13)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
scale_x_discrete(breaks = 1)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
scale_x_discrete(limits = c(0,13), breaks = 1)
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(0, 13, 1))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(0, 13, 2))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(0, 13, 1))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(0, 13, 1.5))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(1, 11, 1))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(1, 12, 1))
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(1, 12, 1), minor_breaks = NULL)
View(AR_tb)
library(tidyverse)
set.seed(16)
AR_param_1 = 0.6
AR_param_2 = 0.2
AR_intercept = 0.7
AR_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n, mean = AR_intercept)
AR <- round(AR, digits = 3)
AR_tb <- AR %>% as_tibble() %>% rowid_to_column()
AR_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
AR[9] # the ts not the tibble
AR[10]
AR_11 <- AR_intercept + AR_param_1 * AR[10] + AR_param_2 * AR[9]
AR_12 <- AR_intercept + AR_param_1 * AR_11 + AR_param_2 * AR[10]
AR_tb <- cbind(AR_tb, cat = rep("Past",10))
AR_tb <- AR_tb %>% add_row(rowid = 11, x = AR_11, cat = "projected")
AR_tb <- AR_tb %>% add_row(rowid = 12, x = AR_12, cat = "projected")
AR_tb %>%
ggplot(aes(rowid, x, group = cat, color = cat)) +
geom_line() +
geom_point(size = 4) +
# xlim(0, 13)
# scale_x_discrete(limits = c(0,13), breaks = 1)
scale_x_continuous(breaks = seq(1, 12, 1), minor_breaks = NULL)
?forecast
set.seed(22)
AR2_param_1 = 0.42
AR2_param_2 = 0.15
AR2_intercept = 0.53
AR2_n <- 10
theme_set(theme_bw())
# arima.sim model c(p, d, q)
# p = AR order
# d = difference
# q = MA order
# Generate an AR(2) with parameters, AR_param_1 and AR_param_2
# Not this: AR <- arima.sim(model=list(order=c(2,0,0), ar = c(AR_param_1, AR_param_2)), n = AR_n) + AR_intercept
AR2 <- arima.sim(model=list(order=c(2,0,0), ar = c(AR2_param_1, AR2_param_2)), n = AR2_n, mean = AR2_intercept)
AR2 <- round(AR2, digits = 3)
AR2_tb <- AR2 %>% as_tibble() %>% rowid_to_column()
View(AR2_tb)
AR2_tb %>%
ggplot(aes(rowid, x)) +
geom_line()
View(AR2_tb)
AR2_11 <- AR2_intercept + AR2_param_1 * AR2[10] + AR2_param_2 * AR2[9]
AR2_12 <- AR2_intercept + AR2_param_1 * AR2_11 + AR2_param_2 * AR2[10]
AR2_13 <- AR2_intercept + AR2_param_1 * AR2_12 + AR2_param_2 * AR2_11
AR2_14 <- AR2_intercept + AR2_param_1 * AR2_13 + AR2_param_2 * AR2_12
x[0] = AR2_14
x = vector(30)
x = vector(length = 30)
?vector
x = vector(mode= n"numeric", length = 30)
x = vector(mode= "numeric", length = 30)
x[1] = AR2_13
x[2] = AR2_14
for (i in 3:30) {
x[i] <- AR2_intercept + AR2_param_1 * x[i-1] + AR2_param_2 * x[i=2]
}
x
for (i in 3:30) {
x[i] <- AR2_intercept + AR2_param_1 * x[i-1] + AR2_param_2 * x[i-2]
}
x = vector(mode= "numeric", length = 30)
x[1] = AR2_13
x[2] = AR2_14
for (i in 3:30) {
x[i] <- AR2_intercept + AR2_param_1 * x[i-1] + AR2_param_2 * x[i-2]
}
x
plot(x)
