serve_site
serve_site()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
install.packages("miniUI")
blogdown:::new_post_addin()
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(blogdown)
blogdown:::new_post_addin()
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(htmltools)
install.packages(c("anytime", "backports", "broom", "data.table", "dplyr", "fda", "fs", "future", "ggplot2", "gt", "highcharter", "Hmisc", "htmlTable", "htmltools", "httr", "isoband", "jsonlite", "knitr", "openssl", "pillar", "pkgbuild", "processx", "ps", "Rcpp", "RcppArmadillo", "reactR", "riingo", "rlang", "rrcov", "rvest", "slider", "sys", "tibble", "tibbletime", "tidyquant", "tidyr", "timetk", "tinytex", "TTR", "vctrs", "xfun", "XML", "yardstick"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("anytime", "backports", "broom", "data.table", "dplyr", "fda", "fs", "future", "ggplot2", "gt", "highcharter", "Hmisc", "htmlTable", "htmltools", "httr", "isoband", "jsonlite", "knitr", "openssl", "pillar", "pkgbuild", "processx", "ps", "Rcpp", "RcppArmadillo", "reactR", "riingo", "rlang", "rrcov", "rvest", "slider", "sys", "tibble", "tibbletime", "tidyquant", "tidyr", "timetk", "tinytex", "TTR", "vctrs", "xfun", "XML", "yardstick"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("anytime", "backports", "broom", "data.table", "dplyr", "fda", "fs", "future", "ggplot2", "gt", "highcharter", "Hmisc", "htmlTable", "htmltools", "httr", "isoband", "jsonlite", "knitr", "openssl", "pillar", "pkgbuild", "processx", "ps", "Rcpp", "RcppArmadillo", "reactR", "riingo", "rlang", "rrcov", "rvest", "slider", "sys", "tibble", "tibbletime", "tidyquant", "tidyr", "timetk", "tinytex", "TTR", "vctrs", "xfun", "XML", "yardstick"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
library(blogdown)
blogdown:::new_post_addin()
install.packages(c("anytime", "backports", "broom", "data.table", "dplyr", "fda", "fs", "future", "ggplot2", "gt", "highcharter", "Hmisc", "htmlTable", "htmltools", "httr", "isoband", "jsonlite", "knitr", "openssl", "pillar", "pkgbuild", "processx", "ps", "Rcpp", "RcppArmadillo", "reactR", "riingo", "rlang", "rrcov", "rvest", "slider", "sys", "tibble", "tibbletime", "tidyquant", "tidyr", "timetk", "tinytex", "TTR", "vctrs", "xfun", "XML", "yardstick"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("anytime", "backports", "broom", "data.table", "dplyr", "fda", "fs", "future", "ggplot2", "gt", "highcharter", "Hmisc", "htmlTable", "htmltools", "httr", "isoband", "jsonlite", "knitr", "openssl", "pillar", "pkgbuild", "processx", "ps", "Rcpp", "RcppArmadillo", "reactR", "riingo", "rlang", "rrcov", "rvest", "slider", "sys", "tibble", "tibbletime", "tidyquant", "tidyr", "timetk", "tinytex", "TTR", "vctrs", "xfun", "XML", "yardstick"))
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
detach("package:base", unload = TRUE)
library(base, lib.loc = "D:/Rbase/R-4.0.1/library")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages("dplyr")
install.packages("dplyr")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages(c("MASS", "mgcv", "survival"), lib="D:/Rbase/R-4.0.1/library")
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang"))
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(blogdown)
blogdown:::new_post_addin()
library(scales)
install.packages("scales")
install.packages("scales")
install.packages("tidyverse")
library(htmltools)
detach("package:htmltools", unload = TRUE)
library(htmltools)
detach("package:htmltools", unload = TRUE)
library(htmltools)
install.packages("htmltools")
install.packages("htmltools")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
version
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("htmltools")
blogdown:::new_post_addin()
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
library(blogdown)
serve_site()
blogdown:::new_post_addin()
library()
library(tidyverse)
library(magrittr)
library(scales)
library(gridExtra)
library(forecast)
library(tseries)
library(ggthemes)
theme_set(theme_economist())
library(tidyverse)
library(magrittr)
library(scales)
library(gridExtra)
library(forecast)
library(tseries)
library(ggthemes)
theme_set(theme_economist())
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
library(blogdown)
serve_site()
serve_site()
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
geom_line(aes(y = y_MA), color = "darkred") +
geom_line(aes(y = y_AR), color = "steelblue")
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
blogdown:::new_post_addin()
library(tidyverse)
library(tidyverse)
mu <- 0.02
sigma <- 0.05
initial = 100
mystock = numeric(100)
mystock[1] = initial
plot(mystock)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
plot(MA)
serve_site()
serve_site()
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
library(tidyverse)
mu <- 0.02
sigma <- 0.05
initial = 100
mystock = numeric(100)
mystock[1] = initial
MA_mean = 2
MA_weight = 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
plot(MA)
library(tidyverse)
mu <- 0.02
sigma <- 0.05
initial = 100
mystock = numeric(100)
mystock[1] = initial
MA_mean = 2
MA_weight = 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
plot(MA)
serve_site()
library(tidyverse)
mu <- 0.02
sigma <- 0.05
initial = 100
mystock = numeric(100)
mystock[1] = initial
MA_mean = 2
MA_weight = 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
plot(MA)
library(tidyverse)
mu <- 0.02
sigma <- 0.05
initial = 100
mystock = numeric(100)
mystock[1] = initial
MA_mean = 2
MA_weight = 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
plot(MA)
serve_site()
library(tidyverse)
# MA_mean = 2
# MA_weight = 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = 0.5), n = 200, mean = 2)
plot(MA)
serve_site()
blogdown:::serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
blogdown::hugo_version()
blogdown:::new_post_addin()
rnorm(100)
library(tidyverse)
library(tidyverse)
rnorm(100)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
ts.plot(MA)
serve_site()
library(blogdown)
serve_site()
setwd("D:/github/blog")
library(blogdown)
install_hugo()
new_site(theme = "gcushen/hugo-academic",
sample = TRUE,
theme_example = TRUE,
empty_dirs = TRUE,
to_yaml = TRUE)
serve_site()
cd public
serve_site()
blogdown:::new_post_addin()
library(tidyverse)
data("mtcars")
mtcars
mtcars %>% ggplot(aes(x = wt, y = mpg)) + geom_point()
