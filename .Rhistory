AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkeblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR, color = color_AR), size = 1) +
geom_line(aes(y = y_MA, color = color_MA), size = 1) +
scale_color_discrete(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkeblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
# theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR, color = color_AR), size = 1) +
geom_line(aes(y = y_MA, color = color_MA), size = 1) +
scale_color_discrete(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkeblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR, color = color_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA, color = color_MA), color = color_MA, size = 1) +
scale_color_discrete(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR, color = color_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA, color = color_MA), color = color_MA, size = 1) +
scale_color_discrete(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR, color = color_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA, color = color_MA), color = color_MA, size = 1) +
scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1) +
scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1)
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("Title here") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1)
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("AR(1) series in GREEN. MA(1) series in BLUE.") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1)
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("AR(1) series in GREEN. MA(1) series in BLUE.") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1) +
scale_y_continuous(breaks = c(0, 2.5, 5.0, 7.5, 10, 12.5))
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
library(bookdown)
library(bookdown)
blogdown:::serve_site()
blogdown:::new_post_addin()
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean, μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("AR(1) series in GREEN. MA(1) series in BLUE.") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1) +
scale_y_continuous(breaks = c(0, 2.5, 5.0, 7.5, 10, 12.5))
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean, μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("AR(1) series in GREEN. MA(1) series in BLUE.") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1) +
scale_y_continuous(breaks = c(0, 2.5, 5.0, 7.5, 10, 12.5))
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2.0
MA_weight = 0.5
# Generate an MA(1) with mean, μ = 2.0 and weight parameter 𝜃= 0.5
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_intercept = 3.0
AR_param = 0.6
# Generate an AR(1) with intercept δ = 3.0 and AR parameter ϕ = 0.6
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
color_AR = "#266935"
color_MA = "darkblue"
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14, face = "bold"),
legend.position = c(0.8, 0.86)
) +
ggtitle("AR(1) series in GREEN. MA(1) series in BLUE.") +
geom_line(aes(y = y_AR), color = color_AR, size = 1) +
geom_line(aes(y = y_MA), color = color_MA, size = 1) +
scale_y_continuous(breaks = c(0, 2.5, 5.0, 7.5, 10, 12.5))
# scale_color_manual(name = "Simulations with arima.sim()", labels=c("MA(1)", "AR(1)"))
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
blogdown:::serve_site()
library(tidyverse)
library(forecast) # incl ggACF()
# library(cowplot)
library(patchwork)
# library(astsa)
set.seed(9)
ar_11_1 = 0.8
ma_11_1 = 0.6
arma_11_1_mu = 2
sim_n = 300
ar_11_2 = 0.9
ma_11_2 = -0.5
arma_11_2_mu = -3
# ar_22 = c(1.4, -0.6)
# ma_22 = c(0.9, 0.6)
ARMA_11_1 <- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_1, ma = ma_11_1), n = sim_n) + arma_11_1_mu
ARMA_11_2 <- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_2, ma = ma_11_2), n = sim_n) + arma_11_2_mu
# ARMA_22 <- arima.sim(model=list(order = c(2, 0, 2), ar = ar_22, ma = ma_22), n = 200)
# ts.plot(ARMA_11, ARMA_22)
time_arma <- bind_cols(ARMA_11_1, ARMA_11_2) %>% rowid_to_column() %>%
rename(y_ARMA_11_1 = ...1, y_ARMA_11_2 = ...2)
theme_set(theme_bw())
colors <- c("First ARMA(1,1)" = "darkred", "Second ARMA(1,1)" = "steelblue")
time_arma %>% ggplot(aes(x = rowid)) +
geom_line(aes(y = y_ARMA_11_1, color = "First ARMA(1,1)"), size = 1, linetype = "longdash") +
geom_line(aes(y = y_ARMA_11_2, color = "Second ARMA(1,1)"), size = 1) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "bold"),
axis.text.y = element_text(size = 12, face = "bold"),
legend.position = "right",
legend.text = element_text(size = 12)
) + labs(
title = "Two different ARMA(1,1) time-series simulations",
color = "Legend"
) +
scale_color_manual(values = colors)
arma_11_1_mulr = arma_11_1_mu/(1 - ar_11_1)
arma_11_2_mulr = arma_11_2_mu/(1 - ar_11_2)
# mu_arma_22 = 10
#ARMA_22 <- arima.sim(model=list(order = c(2, 0, 2), ar = c(0.4, 0.2), ma = c(0.5,0.6)), n = 200, mean = mu_arma_22)
# ts.plot(ARMA_22)
# acf2(ARMA_22)
# mean_arma_22 = mu_arma_22/(1 - 0.4 - 0.2)
acf2(ARMA_11_1)
library(astsa)
set.seed(9)
ar_11_1 = 0.8
ma_11_1 = 0.6
arma_11_1_mu = 2
sim_n = 300
ar_11_2 = 0.9
ma_11_2 = -0.5
arma_11_2_mu = -3
# ar_22 = c(1.4, -0.6)
# ma_22 = c(0.9, 0.6)
ARMA_11_1 <- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_1, ma = ma_11_1), n = sim_n) + arma_11_1_mu
ARMA_11_2 <- arima.sim(model=list(order = c(1, 0, 1), ar = ar_11_2, ma = ma_11_2), n = sim_n) + arma_11_2_mu
# ARMA_22 <- arima.sim(model=list(order = c(2, 0, 2), ar = ar_22, ma = ma_22), n = 200)
# ts.plot(ARMA_11, ARMA_22)
time_arma <- bind_cols(ARMA_11_1, ARMA_11_2) %>% rowid_to_column() %>%
rename(y_ARMA_11_1 = ...1, y_ARMA_11_2 = ...2)
theme_set(theme_bw())
colors <- c("First ARMA(1,1)" = "darkred", "Second ARMA(1,1)" = "steelblue")
time_arma %>% ggplot(aes(x = rowid)) +
geom_line(aes(y = y_ARMA_11_1, color = "First ARMA(1,1)"), size = 1, linetype = "longdash") +
geom_line(aes(y = y_ARMA_11_2, color = "Second ARMA(1,1)"), size = 1) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.1)) +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "bold"),
axis.text.y = element_text(size = 12, face = "bold"),
legend.position = "right",
legend.text = element_text(size = 12)
) + labs(
title = "Two different ARMA(1,1) time-series simulations",
color = "Legend"
) +
scale_color_manual(values = colors)
arma_11_1_mulr = arma_11_1_mu/(1 - ar_11_1)
arma_11_2_mulr = arma_11_2_mu/(1 - ar_11_2)
# mu_arma_22 = 10
#ARMA_22 <- arima.sim(model=list(order = c(2, 0, 2), ar = c(0.4, 0.2), ma = c(0.5,0.6)), n = 200, mean = mu_arma_22)
# ts.plot(ARMA_22)
# acf2(ARMA_22)
# mean_arma_22 = mu_arma_22/(1 - 0.4 - 0.2)
acf2(ARMA_11_1)
acf2(ARMA_11_2)
library(bookdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
