lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 2) +
geom_line(aes(y = y_AR), color = "steelblue")
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue")
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(17)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(19)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axaxis.title.y = element_blank()
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank()
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank()
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1) +
opts(legend.position = "right")
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.position = "right"
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1)
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1)
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.justification = c(0, 1),
legend.position = c(0, 1)
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.justification = c(0, 1),
legend.position = c(100, 5)
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
# Generate and plot white noise
# WN <- arima.sim(model=list(order= c(0,0,0)), n = 200 )
# plot(WN)
library(tidyverse)
set.seed(25)
MA_mean = 2
MA_weight = 0.5
# Generate and plot an MA(1) with parameter .9
# MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean,
#                rand.gen = rnorm, sd = 40)
MA <- arima.sim(model=list(order = c(0,0,1), ma = MA_weight), n = 200, mean = MA_mean)
AR_param = 0.6
AR_intercept = 3
# Generate and plot an AR(2) with parameters 1.5 and -.75
AR <- arima.sim(model=list(order=c(1,0,0), ar = AR_param), n = 200, mean = AR_intercept)
ts.plot(MA, AR)
# white_noise_1_tb  <- as_tibble(white_noise) %>% rowid_to_column()
# dat_wn_tbl <- bind_cols(dat_wn) %>% rowid_to_column() %>% rename(value_y = ...1 )
time_ma_ar <- bind_cols(MA, AR) %>% rowid_to_column() %>%
rename(y_MA = ...1, y_AR = ...2)
time_ma_ar %>% ggplot(aes(x = rowid)) +
theme_bw() +
theme(
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(size = 14),
legend.justification = c(100, 5),
legend.position = c(100, 5)
) +
geom_line(aes(y = y_MA), color = "darkred", size = 1) +
geom_line(aes(y = y_AR), color = "steelblue", size = 1)
# MA mean is intercept
lr_mean_AR <- AR_intercept/(1 - AR_param)
variance_MA <- (1 + MA_weight^2)*1
variance_AR <- 1/(1 - AR_param^2)
